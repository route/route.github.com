<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>NOPe Code</title>
  <id>http://route.github.io/</id>
  <link href="http://route.github.io/"/>
  <link href="http://route.github.io/feed.xml" rel="self"/>
  <updated>2018-09-24T00:00:00+03:00</updated>
  <author>
    <name>Dmitry Vorotilin</name>
  </author>
  <entry>
    <title>OpenVPN on Ubuntu 18.04</title>
    <link rel="alternate" href="/2018/09/24/ubuntu-openvpn.html"/>
    <id>/2018/09/24/ubuntu-openvpn.html</id>
    <published>2018-09-24T00:00:00+03:00</published>
    <updated>2018-09-24T00:00:00+03:00</updated>
    <author>
      <name>Dmitry Vorotilin</name>
    </author>
    <summary type="html">&lt;h3&gt;Install and copy configs:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt update
&lt;span class="nb"&gt;sudo &lt;/span&gt;apt install openvpn
wget &lt;span class="nt"&gt;-P&lt;/span&gt; ~/ https://github.com/OpenVPN/easy-rsa/releases/download/v3.0.4/EasyRSA-3.0.4.tgz
&lt;span class="nb"&gt;tar &lt;/span&gt;zxvf EasyRSA-3.0.4.tgz
&lt;span class="nb"&gt;cd &lt;/span&gt;EasyRSA-3.0.4
cp vars.example vars
vim vars
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Set these variables...&lt;/p&gt;</summary>
    <content type="html">&lt;h3&gt;Install and copy configs:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt update
&lt;span class="nb"&gt;sudo &lt;/span&gt;apt install openvpn
wget &lt;span class="nt"&gt;-P&lt;/span&gt; ~/ https://github.com/OpenVPN/easy-rsa/releases/download/v3.0.4/EasyRSA-3.0.4.tgz
&lt;span class="nb"&gt;tar &lt;/span&gt;zxvf EasyRSA-3.0.4.tgz
&lt;span class="nb"&gt;cd &lt;/span&gt;EasyRSA-3.0.4
cp vars.example vars
vim vars
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Set these variables in the file and save:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;vim vars
set_var EASYRSA_REQ_COUNTRY     &lt;span class="s2"&gt;"&amp;lt;COUNTRY&amp;gt;"&lt;/span&gt;
set_var EASYRSA_REQ_PROVINCE    &lt;span class="s2"&gt;"&amp;lt;PROVINCE&amp;gt;"&lt;/span&gt;
set_var EASYRSA_REQ_CITY        &lt;span class="s2"&gt;"&amp;lt;CITY&amp;gt;"&lt;/span&gt;
set_var EASYRSA_REQ_ORG         &lt;span class="s2"&gt;"&amp;lt;ORGANIZATION&amp;gt;"&lt;/span&gt;
set_var EASYRSA_REQ_EMAIL       &lt;span class="s2"&gt;"&amp;lt;EMAIL&amp;gt;"&lt;/span&gt;
set_var EASYRSA_REQ_OU          &lt;span class="s2"&gt;"&amp;lt;ORGANIZATIONAL UNIT&amp;gt;"&lt;/span&gt;
set_var EASYRSA_KEY_SIZE        2048
set_var EASYRSA_CA_EXPIRE       3650
set_var EASYRSA_CERT_EXPIRE     3650
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Generate server keys:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;./easyrsa init-pki
./easyrsa build-ca
./easyrsa build-server-full openvpn-server nopass
./easyrsa gen-dh
openvpn &lt;span class="nt"&gt;--genkey&lt;/span&gt; &lt;span class="nt"&gt;--secret&lt;/span&gt; ta.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Generate client keys:&lt;/h3&gt;

&lt;p&gt;Set CLIENT_NAME to any name you&amp;rsquo;d like to associate your OpenVPN client with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;CLIENT_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;client-name&amp;gt;"&lt;/span&gt;
./easyrsa build-client-full &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt; nopass
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Copy server keys:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;cp pki/dh.pem &lt;span class="se"&gt;\&lt;/span&gt;
   pki/ca.crt &lt;span class="se"&gt;\&lt;/span&gt;
   pki/issued/openvpn-server.crt &lt;span class="se"&gt;\&lt;/span&gt;
   pki/private/openvpn-server.key &lt;span class="se"&gt;\&lt;/span&gt;
   ta.key &lt;span class="se"&gt;\&lt;/span&gt;
   /etc/openvpn/keys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Configure client:&lt;/h3&gt;

&lt;p&gt;Change &lt;code&gt;&amp;lt;server-ip&amp;gt;&lt;/code&gt; in the middle of the ovpn file to your server IP address.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /etc/openvpn
touch &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;span class="nb"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
client
nobind
dev tun
remote-cert-tls server

remote &amp;lt;server-ip&amp;gt; 1194 udp

key-direction 1

redirect-gateway def1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Type &lt;code&gt;Ctrl-D&lt;/code&gt; here and then type the rest:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;key&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;span class="nb"&gt;cat&lt;/span&gt; ~/EasyRSA-3.0.4/pki/private/&lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.key &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;/key&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;cert&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
sed &lt;span class="nt"&gt;-n&lt;/span&gt; &lt;span class="s1"&gt;'/^-----BEGIN/,/^-----END/p'&lt;/span&gt; ~/EasyRSA-3.0.4/pki/issued/&lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.crt &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;/cert&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;ca&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;span class="nb"&gt;cat&lt;/span&gt; ~/EasyRSA-3.0.4/pki/ca.crt &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;/ca&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;tls-auth&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;span class="nb"&gt;cat&lt;/span&gt; ~/EasyRSA-3.0.4/ta.key &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;/tls-auth&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Configure server:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;touch server.conf
&lt;span class="nb"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; server.conf
server 192.168.255.0 255.255.255.0

verb 3

key /etc/openvpn/keys/openvpn-server.key  &lt;span class="c"&gt;# This file should be kept secret&lt;/span&gt;
ca /etc/openvpn/keys/ca.crt
cert /etc/openvpn/keys/openvpn-server.crt
dh /etc/openvpn/keys/dh.pem
tls-auth /etc/openvpn/keys/ta.key 0 &lt;span class="c"&gt;# This file is secret&lt;/span&gt;

key-direction 0
keepalive 10 60

persist-key
persist-tun

proto udp
port 1194
dev tun

status openvpn-status.log

user nobody
group nogroup

explicit-exit-notify 1
remote-cert-tls client

route 192.168.254.0 255.255.255.0

push &lt;span class="s2"&gt;"dhcp-option DNS 8.8.8.8"&lt;/span&gt;
push &lt;span class="s2"&gt;"dhcp-option DNS 8.8.4.4"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Type &lt;code&gt;Ctrl-D&lt;/code&gt; here.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s basically it, we only need to allow traffic to be NATed through the
server. Set &lt;code&gt;net.ipv4.ip_forward=1&lt;/code&gt; in this file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;vim /etc/sysctl.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Find your default interface:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;ip route | &lt;span class="nb"&gt;grep &lt;/span&gt;default
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output should be like: default via x.x.x.x dev &lt;code&gt;ens3&lt;/code&gt; proto dhcp src x.x.x.x
metric 100. Rememeber your interface name and put it to iptable rules below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;iptables &lt;span class="nt"&gt;-t&lt;/span&gt; nat &lt;span class="nt"&gt;-A&lt;/span&gt; POSTROUTING &lt;span class="nt"&gt;-o&lt;/span&gt; ens3 &lt;span class="nt"&gt;-j&lt;/span&gt; MASQUERADE
iptables &lt;span class="nt"&gt;-A&lt;/span&gt; FORWARD &lt;span class="nt"&gt;-j&lt;/span&gt; ACCEPT
apt-get install iptables-persistent
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you install iptables-persistent it will ask you to save current rules into
file, just agree with that and then start the service:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl start openvpn@server
&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl &lt;span class="nb"&gt;enable &lt;/span&gt;openvpn@server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you can download &lt;code&gt;$CLIENT_NAME.ovpn&lt;/code&gt; to your machine and start browsing
internet securely:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;scp root@&amp;lt;server-ip&amp;gt;:/etc/openvpn/&amp;lt;client-name&amp;gt;.ovpn ./
&lt;span class="nb"&gt;sudo &lt;/span&gt;openvpn &amp;lt;client-name&amp;gt;.ovpn
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>OpenVPN on FreeBSD 11.1</title>
    <link rel="alternate" href="/2018/05/21/freebsd-openvpn.html"/>
    <id>/2018/05/21/freebsd-openvpn.html</id>
    <published>2018-05-21T00:00:00+03:00</published>
    <updated>2018-05-21T00:00:00+03:00</updated>
    <author>
      <name>Dmitry Vorotilin</name>
    </author>
    <summary type="html">&lt;h3&gt;Install and copy configs:&lt;/h3&gt;

&lt;p&gt;Let’s first change shell to sh as FreeBSD comes with csh by default:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;root@vpn:~ &lt;span class="c"&gt;# sh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;pkg update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; pkg install openvpn
mkdir /usr/local/etc/openvpn
cp /usr/local/share/examples/openvpn/sample-config-files/server.conf &lt;span class="se"&gt;\&lt;/span&gt;
 ...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary>
    <content type="html">&lt;h3&gt;Install and copy configs:&lt;/h3&gt;

&lt;p&gt;Let&amp;rsquo;s first change shell to sh as FreeBSD comes with csh by default:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;root@vpn:~ &lt;span class="c"&gt;# sh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;pkg update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; pkg install openvpn
mkdir /usr/local/etc/openvpn
cp /usr/local/share/examples/openvpn/sample-config-files/server.conf &lt;span class="se"&gt;\&lt;/span&gt;
   /usr/local/etc/openvpn/openvpn.conf
cp &lt;span class="nt"&gt;-r&lt;/span&gt; /usr/local/share/easy-rsa /usr/local/etc/openvpn/easy-rsa
&lt;span class="nb"&gt;cd&lt;/span&gt; /usr/local/etc/openvpn/easy-rsa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Set these variables in the file and save:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# vim vars&lt;/span&gt;
set_var EASYRSA_REQ_COUNTRY     &lt;span class="s2"&gt;"&amp;lt;COUNTRY&amp;gt;"&lt;/span&gt;
set_var EASYRSA_REQ_PROVINCE    &lt;span class="s2"&gt;"&amp;lt;PROVINCE&amp;gt;"&lt;/span&gt;
set_var EASYRSA_REQ_CITY        &lt;span class="s2"&gt;"&amp;lt;CITY&amp;gt;"&lt;/span&gt;
set_var EASYRSA_REQ_ORG         &lt;span class="s2"&gt;"&amp;lt;ORGANIZATION&amp;gt;"&lt;/span&gt;
set_var EASYRSA_REQ_EMAIL       &lt;span class="s2"&gt;"&amp;lt;EMAIL&amp;gt;"&lt;/span&gt;
set_var EASYRSA_REQ_OU          &lt;span class="s2"&gt;"&amp;lt;ORGANIZATIONAL UNIT&amp;gt;"&lt;/span&gt;
set_var EASYRSA_KEY_SIZE        2048
set_var EASYRSA_CA_EXPIRE       3650
set_var EASYRSA_CERT_EXPIRE     3650
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Generate server keys:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;./easyrsa.real init-pki
./easyrsa.real build-ca
./easyrsa.real build-server-full openvpn-server nopass
./easyrsa.real gen-dh
openvpn &lt;span class="nt"&gt;--genkey&lt;/span&gt; &lt;span class="nt"&gt;--secret&lt;/span&gt; ta.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Generate client keys:&lt;/h3&gt;

&lt;p&gt;Set CLIENT_NAME to any name you&amp;rsquo;d like to associate your OpenVPN client with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;CLIENT_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;client-name&amp;gt;"&lt;/span&gt;
./easyrsa.real build-client-full &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt; nopass
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Copy server keys:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;mkdir /usr/local/etc/openvpn/keys
cp pki/dh.pem &lt;span class="se"&gt;\&lt;/span&gt;
   pki/ca.crt &lt;span class="se"&gt;\&lt;/span&gt;
   pki/issued/openvpn-server.crt &lt;span class="se"&gt;\&lt;/span&gt;
   pki/private/openvpn-server.key &lt;span class="se"&gt;\&lt;/span&gt;
   ta.key &lt;span class="se"&gt;\&lt;/span&gt;
   /usr/local/etc/openvpn/keys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Configure client:&lt;/h3&gt;

&lt;p&gt;Change &lt;code&gt;&amp;lt;server-ip&amp;gt;&lt;/code&gt; in the middle of the ovpn file to your server IP/Domain.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /usr/local/etc/openvpn
touch &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;span class="nb"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
client
nobind
dev tun
remote-cert-tls server

remote &amp;lt;server-ip&amp;gt; 1194 udp

key-direction 1

redirect-gateway def1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Type &lt;code&gt;Ctrl-D&lt;/code&gt; here and then type the rest:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;key&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;span class="nb"&gt;cat &lt;/span&gt;easy-rsa/pki/private/&lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.key &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;/key&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;cert&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
sed &lt;span class="nt"&gt;-n&lt;/span&gt; &lt;span class="s1"&gt;'/^-----BEGIN/,/^-----END/p'&lt;/span&gt; easy-rsa/pki/issued/&lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.crt &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;/cert&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;ca&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;span class="nb"&gt;cat &lt;/span&gt;easy-rsa/pki/ca.crt &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;/ca&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;tls-auth&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;span class="nb"&gt;cat &lt;/span&gt;easy-rsa/ta.key &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;/tls-auth&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$CLIENT_NAME&lt;/span&gt;.ovpn
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Configure server:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;touch openvpn.conf
&lt;span class="nb"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; openvpn.conf
server 192.168.255.0 255.255.255.0

verb 3

key /usr/local/etc/openvpn/keys/openvpn-server.key  &lt;span class="c"&gt;# This file should be kept secret&lt;/span&gt;
ca /usr/local/etc/openvpn/keys/ca.crt
cert /usr/local/etc/openvpn/keys/openvpn-server.crt
dh /usr/local/etc/openvpn/keys/dh.pem
tls-auth /usr/local/etc/openvpn/keys/ta.key 0 &lt;span class="c"&gt;# This file is secret&lt;/span&gt;

key-direction 0
keepalive 10 60

persist-key
persist-tun

proto udp
port 1194
dev tun

status openvpn-status.log

user nobody
group nobody

explicit-exit-notify 1
remote-cert-tls client

route 192.168.254.0 255.255.255.0

push &lt;span class="s2"&gt;"dhcp-option DNS 8.8.8.8"&lt;/span&gt;
push &lt;span class="s2"&gt;"dhcp-option DNS 8.8.4.4"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Type &lt;code&gt;Ctrl-D&lt;/code&gt; here and again type the rest:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;sysrc &lt;span class="nv"&gt;openvpn_enable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"YES"&lt;/span&gt;
sysrc &lt;span class="nv"&gt;openvpn_if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"tun"&lt;/span&gt;
sysrc &lt;span class="nv"&gt;gateway_enable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"YES"&lt;/span&gt;
sysrc &lt;span class="nv"&gt;firewall_enable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"YES"&lt;/span&gt;
sysrc &lt;span class="nv"&gt;firewall_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"OPEN"&lt;/span&gt;
sysrc &lt;span class="nv"&gt;natd_enable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"YES"&lt;/span&gt;
sysrc &lt;span class="nv"&gt;natd_interface&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"vtnet0"&lt;/span&gt;
sysrc &lt;span class="nv"&gt;natd_flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;
service openvpn start
reboot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After your server reboots you can download &lt;code&gt;$CLIENT_NAME.ovpn&lt;/code&gt; to your machine
and start browsing internet securely:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;scp root@&amp;lt;server-ip&amp;gt;:/usr/local/etc/openvpn/&amp;lt;client-name&amp;gt;.ovpn ./
&lt;span class="nb"&gt;sudo &lt;/span&gt;openvpn &amp;lt;client-name&amp;gt;.ovpn
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Telegram drama</title>
    <link rel="alternate" href="/2018/04/24/telegram-drama.html"/>
    <id>/2018/04/24/telegram-drama.html</id>
    <published>2018-04-24T00:00:00+03:00</published>
    <updated>2018-04-24T00:00:00+03:00</updated>
    <author>
      <name>Dmitry Vorotilin</name>
    </author>
    <summary type="html">&lt;p&gt;In my childhood internet and network looked like a magick. In the movies they
showed something like ping output and I definitely thought that someone hacked
someone else.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/hackers.png" class="img-fluid" alt="hackers"&gt;&lt;/p&gt;

&lt;h3&gt;The beginning of story&lt;/h3&gt;

&lt;p&gt;Recently media regulator Roskomnadzor started to block...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;In my childhood internet and network looked like a magick. In the movies they
showed something like ping output and I definitely thought that someone hacked
someone else.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/hackers.png" class="img-fluid" alt="hackers"&gt;&lt;/p&gt;

&lt;h3&gt;The beginning of story&lt;/h3&gt;

&lt;p&gt;Recently media regulator Roskomnadzor started to block Telegram IP addresses
because the latter denied giving goverment keys to decipher messages. It goes
without saying that it&amp;rsquo;s creepy but among other things Roskomnadzor blocked like
roughly 18m of IP addresses. It happened because Telegram used services publicly
provided by AWS and other big companies. Here I should say that&amp;rsquo;s exactly the
reason these companies exist lol they provide services. Roskomnadzor started to
block these IPs and Telegram started to use other IPs and so on. The post is not
about how secure Telegram is or why it doesn&amp;rsquo;t provide secure E2E encrypted
channels by default. In general it&amp;rsquo;s about freedom to talk to each other, browse
internet and live privately and by the way tools you can use to debug network.&lt;/p&gt;

&lt;h3&gt;The debugging&lt;/h3&gt;

&lt;p&gt;As usually this morning I tried to connect to one of our web services and it
timed out. ICMP traffic wasn&amp;rsquo;t blocked though. Let&amp;rsquo;s say a domain for this
server was &lt;code&gt;example.com&lt;/code&gt; with IP address &lt;code&gt;x.x.x.x&lt;/code&gt; and my PC had white IP
address &lt;code&gt;y.y.y.y&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ping example.com
PING x.x.x.x: 64 data bytes
72 bytes from x.x.x.x: &lt;span class="nv"&gt;seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0 &lt;span class="nv"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;52 &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;141.242 ms
72 bytes from x.x.x.x: &lt;span class="nv"&gt;seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1 &lt;span class="nv"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;52 &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;140.809 ms

2 packets transmitted, 2 packets received, 0% packet loss
round-trip min/avg/max &lt;span class="o"&gt;=&lt;/span&gt; 140.702/140.918/141.242 ms
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ping goes smoothly but providers can block resources using different techniques
starting from DNS spoofing and ending by DPI. If I want to open &lt;a href="http://rutracker.org"&gt;rutracker.org&lt;/a&gt;
for example my ISP redirects me to its own &lt;a href="http://warning.rt.ru/?id=9&amp;amp;st=0&amp;amp;dt=195.82.146.214&amp;amp;rs=http%3A%2F%2Frutracker.org%2Fforum%2Findex.php"&gt;page&lt;/a&gt;
showing that this address was in fact blocked by goverment. Though it&amp;rsquo;s not the
case for &lt;code&gt;x.x.x.x&lt;/code&gt; where HTTP traffic disappears silently. Opening
&lt;code&gt;chrome://net-internals&lt;/code&gt; sometimes is very intersting and confirms time out:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;14057: URL_REQUEST
https://example.com/
Start Time: 2018-04-24 08:07:06.009

t=144674 [st=    0] +REQUEST_ALIVE  [dt=24521]
                     --&amp;gt; priority = "HIGHEST"
                     --&amp;gt; url = "https://example.com/"
t=144674 [st=    0]    URL_REQUEST_DELEGATE  [dt=0]
t=144674 [st=    0]   +URL_REQUEST_START_JOB  [dt=24521]
                       --&amp;gt; load_flags = 4353 (MAIN_FRAME_DEPRECATED | VALIDATE_CACHE | VERIFY_EV_CERT)
                       --&amp;gt; method = "GET"
                       --&amp;gt; url = "https://example.com/"
t=144674 [st=    0]      URL_REQUEST_DELEGATE  [dt=0]
t=144674 [st=    0]      HTTP_CACHE_GET_BACKEND  [dt=0]
t=144674 [st=    0]      HTTP_CACHE_OPEN_ENTRY  [dt=0]
                         --&amp;gt; net_error = -2 (ERR_FAILED)
t=144674 [st=    0]      HTTP_CACHE_CREATE_ENTRY  [dt=0]
t=144674 [st=    0]      HTTP_CACHE_ADD_TO_ENTRY  [dt=1]
t=144675 [st=    1]     +HTTP_STREAM_REQUEST  [dt=24520]
t=144675 [st=    1]        HTTP_STREAM_JOB_CONTROLLER_BOUND
                           --&amp;gt; source_dependency = 14060 (HTTP_STREAM_JOB_CONTROLLER)
t=169195 [st=24521]        HTTP_STREAM_REQUEST_BOUND_TO_JOB
                           --&amp;gt; source_dependency = 14061 (HTTP_STREAM_JOB)
t=169195 [st=24521]     -HTTP_STREAM_REQUEST
t=169195 [st=24521]   -URL_REQUEST_START_JOB
                       --&amp;gt; net_error = -118 (ERR_CONNECTION_TIMED_OUT)
t=169195 [st=24521]    URL_REQUEST_DELEGATE  [dt=0]
t=169195 [st=24521] -REQUEST_ALIVE
                     --&amp;gt; net_error = -118 (ERR_CONNECTION_TIMED_OUT)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Traceroute from my machine to this IP shows a few intermidiate backbone providers:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;traceroute to example.com &lt;span class="o"&gt;(&lt;/span&gt;x.x.x.x&lt;span class="o"&gt;)&lt;/span&gt;, 30 hops max, 60 byte packets
 1  gateway &lt;span class="o"&gt;(&lt;/span&gt;192.168.0.1&lt;span class="o"&gt;)&lt;/span&gt;  0.417 ms  0.484 ms  0.568 ms
 2  100.103.0.1 &lt;span class="o"&gt;(&lt;/span&gt;100.103.0.1&lt;span class="o"&gt;)&lt;/span&gt;  4.935 ms  4.992 ms  5.020 ms
 3  213.59.232.208 &lt;span class="o"&gt;(&lt;/span&gt;213.59.232.208&lt;span class="o"&gt;)&lt;/span&gt;  38.910 ms 213.59.232.204 &lt;span class="o"&gt;(&lt;/span&gt;213.59.232.204&lt;span class="o"&gt;)&lt;/span&gt;  5.076 ms 213.59.232.208 &lt;span class="o"&gt;(&lt;/span&gt;213.59.232.208&lt;span class="o"&gt;)&lt;/span&gt;  5.339 ms
 4  87.226.146.65 &lt;span class="o"&gt;(&lt;/span&gt;87.226.146.65&lt;span class="o"&gt;)&lt;/span&gt;  6.112 ms 87.226.146.63 &lt;span class="o"&gt;(&lt;/span&gt;87.226.146.63&lt;span class="o"&gt;)&lt;/span&gt;  6.889 ms  6.970 ms
 5  87.226.146.58 &lt;span class="o"&gt;(&lt;/span&gt;87.226.146.58&lt;span class="o"&gt;)&lt;/span&gt;  20.707 ms  20.892 ms  20.702 ms
 6  213.59.212.235 &lt;span class="o"&gt;(&lt;/span&gt;213.59.212.235&lt;span class="o"&gt;)&lt;/span&gt;  20.632 ms  16.806 ms  17.437 ms
 7  rostelecom.demarc.cogentco.com &lt;span class="o"&gt;(&lt;/span&gt;149.11.20.138&lt;span class="o"&gt;)&lt;/span&gt;  63.077 ms  63.722 ms  64.571 ms
 8  hu0-1-0-4.rcr22.fra06.atlas.cogentco.com &lt;span class="o"&gt;(&lt;/span&gt;149.11.20.137&lt;span class="o"&gt;)&lt;/span&gt;  57.615 ms  58.457 ms  58.454 ms
 9  be2845.ccr41.fra03.atlas.cogentco.com &lt;span class="o"&gt;(&lt;/span&gt;154.54.56.189&lt;span class="o"&gt;)&lt;/span&gt;  58.463 ms be2846.ccr42.fra03.atlas.cogentco.com &lt;span class="o"&gt;(&lt;/span&gt;154.54.37.29&lt;span class="o"&gt;)&lt;/span&gt;  66.791 ms be2845.ccr41.fra03.atlas.cogentco.com &lt;span class="o"&gt;(&lt;/span&gt;154.54.56.189&lt;span class="o"&gt;)&lt;/span&gt;  59.662 ms
10  be3187.agr41.fra03.atlas.cogentco.com &lt;span class="o"&gt;(&lt;/span&gt;130.117.1.117&lt;span class="o"&gt;)&lt;/span&gt;  63.433 ms be3186.agr41.fra03.atlas.cogentco.com &lt;span class="o"&gt;(&lt;/span&gt;130.117.0.2&lt;span class="o"&gt;)&lt;/span&gt;  64.132 ms be3187.agr41.fra03.atlas.cogentco.com &lt;span class="o"&gt;(&lt;/span&gt;130.117.1.117&lt;span class="o"&gt;)&lt;/span&gt;  63.998 ms
11  telia.fra03.atlas.cogentco.com &lt;span class="o"&gt;(&lt;/span&gt;130.117.14.198&lt;span class="o"&gt;)&lt;/span&gt;  70.302 ms  70.477 ms  70.480 ms
12  ffm-bb3-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.133.34&lt;span class="o"&gt;)&lt;/span&gt;  168.162 ms ffm-bb4-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.125.218&lt;span class="o"&gt;)&lt;/span&gt;  140.360 ms ffm-bb3-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.120.3&lt;span class="o"&gt;)&lt;/span&gt;  165.617 ms
13  prs-bb3-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.123.13&lt;span class="o"&gt;)&lt;/span&gt;  171.186 ms  171.374 ms  169.994 ms
14  nyk-bb3-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;213.155.135.5&lt;span class="o"&gt;)&lt;/span&gt;  164.382 ms nyk-bb4-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;80.91.251.100&lt;span class="o"&gt;)&lt;/span&gt;  149.359 ms  150.275 ms
15  nyk-b3-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.140.223&lt;span class="o"&gt;)&lt;/span&gt;  163.973 ms hbg-bb1-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;80.91.249.11&lt;span class="o"&gt;)&lt;/span&gt;  177.416 ms  177.405 ms
16  digitalocean-ic-306498-nyk-b3.c.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.45.10&lt;span class="o"&gt;)&lt;/span&gt;  145.430 ms  145.572 ms  158.371 ms
17  &lt;span class="k"&gt;*&lt;/span&gt; &lt;span class="k"&gt;*&lt;/span&gt; &lt;span class="k"&gt;*&lt;/span&gt;
18  x.x.x.x &lt;span class="o"&gt;(&lt;/span&gt;x.x.x.x&lt;span class="o"&gt;)&lt;/span&gt;  154.054 ms  140.789 ms  141.688 ms
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While backwards from the droplet there&amp;rsquo;s only one of them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;traceroute to y.y.y.y &lt;span class="o"&gt;(&lt;/span&gt;y.y.y.y&lt;span class="o"&gt;)&lt;/span&gt;, 30 hops max, 60 byte packets
 1  159.89.176.253 &lt;span class="o"&gt;(&lt;/span&gt;159.89.176.253&lt;span class="o"&gt;)&lt;/span&gt;  0.290 ms  0.263 ms  0.231 ms
 2  138.197.248.28 &lt;span class="o"&gt;(&lt;/span&gt;138.197.248.28&lt;span class="o"&gt;)&lt;/span&gt;  0.478 ms  0.469 ms  0.456 ms
 3  nyk-b3-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.45.9&lt;span class="o"&gt;)&lt;/span&gt;  1.021 ms  1.058 ms  1.043 ms
 4  nyk-bb3-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.140.222&lt;span class="o"&gt;)&lt;/span&gt;  1.153 ms nyk-bb4-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.139.150&lt;span class="o"&gt;)&lt;/span&gt;  1.523 ms nyk-bb3-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.140.222&lt;span class="o"&gt;)&lt;/span&gt;  1.111 ms
 5  prs-bb4-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;80.91.251.101&lt;span class="o"&gt;)&lt;/span&gt;  71.869 ms prs-bb3-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;213.155.135.4&lt;span class="o"&gt;)&lt;/span&gt;  106.781 ms  107.322 ms
 6  prs-bb3-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.134.92&lt;span class="o"&gt;)&lt;/span&gt;  88.216 ms  88.162 ms ffm-bb4-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.122.139&lt;span class="o"&gt;)&lt;/span&gt;  81.890 ms
 7  ffm-b1-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.141.237&lt;span class="o"&gt;)&lt;/span&gt;  93.304 ms ffm-bb3-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.123.12&lt;span class="o"&gt;)&lt;/span&gt;  101.734 ms  102.168 ms
 8  rostelecom-ic-319651-ffm-b1.c.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.151.97&lt;span class="o"&gt;)&lt;/span&gt;  156.199 ms  156.187 ms  156.198 ms
 9  213.59.212.103 &lt;span class="o"&gt;(&lt;/span&gt;213.59.212.103&lt;span class="o"&gt;)&lt;/span&gt;  138.304 ms  149.985 ms rostelecom-ic-319651-ffm-b1.c.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.151.97&lt;span class="o"&gt;)&lt;/span&gt;  158.270 ms
10  y.y.y.y &lt;span class="o"&gt;(&lt;/span&gt;y.y.y.y&lt;span class="o"&gt;)&lt;/span&gt;  139.571 ms  139.690 ms  139.701 ms
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The difference can be explained by dynamic routing. Since routes are described
by &lt;a href="https://en.wikipedia.org/wiki/Border_Gateway_Protocol"&gt;BGP&lt;/a&gt; even a few
sequential traceroutes can show different routes. In BGP realm the trust is
above everything. This site &lt;a href="https://bgpstream.com/"&gt;bgpstream.com&lt;/a&gt; can be very
interesting if you are into it. Though the route from DO is twice as shorter
then from Rostelekom. Let&amp;rsquo;s monitor outgoing and incoming traffic for this IP on
one window open curl and tcpdump on another:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl http://example.com
curl: &lt;span class="o"&gt;(&lt;/span&gt;7&lt;span class="o"&gt;)&lt;/span&gt; Failed to connect to example.com port 80: Connection timed out
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;tcpdump &lt;span class="nt"&gt;-nn&lt;/span&gt; &lt;span class="nt"&gt;-vvv&lt;/span&gt; &lt;span class="nt"&gt;-i&lt;/span&gt; enp4s0 dst x.x.x.x or src x.x.x.x
tcpdump: listening on enp4s0, link-type EN10MB &lt;span class="o"&gt;(&lt;/span&gt;Ethernet&lt;span class="o"&gt;)&lt;/span&gt;, capture size 262144 bytes
23:38:18.908971 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 59563, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF], proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 60&lt;span class="o"&gt;)&lt;/span&gt;
    192.168.0.13.41722 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x.x.x.x.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;S], cksum 0xd52f &lt;span class="o"&gt;(&lt;/span&gt;correct&lt;span class="o"&gt;)&lt;/span&gt;, seq 1092877667, win 29200, options &lt;span class="o"&gt;[&lt;/span&gt;mss 1460,sackOK,TS val 3908771289 ecr 0,nop,wscale 7], length 0
23:38:18.925014 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 58, id 1, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;none], proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 40&lt;span class="o"&gt;)&lt;/span&gt;
    x.x.x.x.80 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 192.168.0.13.41722: Flags &lt;span class="o"&gt;[&lt;/span&gt;R], cksum 0x43e5 &lt;span class="o"&gt;(&lt;/span&gt;correct&lt;span class="o"&gt;)&lt;/span&gt;, seq 0, win 29200, length 0
23:38:19.932815 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 59564, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF], proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 60&lt;span class="o"&gt;)&lt;/span&gt;
    192.168.0.13.41722 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x.x.x.x.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;S], cksum 0xd12f &lt;span class="o"&gt;(&lt;/span&gt;correct&lt;span class="o"&gt;)&lt;/span&gt;, seq 1092877667, win 29200, options &lt;span class="o"&gt;[&lt;/span&gt;mss 1460,sackOK,TS val 3908772313 ecr 0,nop,wscale 7], length 0
23:38:19.948956 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 58, id 1, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;none], proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 40&lt;span class="o"&gt;)&lt;/span&gt;
    x.x.x.x.80 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 192.168.0.13.41722: Flags &lt;span class="o"&gt;[&lt;/span&gt;R], cksum 0x43e5 &lt;span class="o"&gt;(&lt;/span&gt;correct&lt;span class="o"&gt;)&lt;/span&gt;, seq 0, win 29200, length 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3-Way TCP Handshake should be (SYN, SYN-ACK, ACK). Instead we see RST packet
right after SYN. You can see them as [S] and [R] flags. In other words all
outgoing http traffic dropped in the middle and instead we are sent RST packet.
Let&amp;rsquo;s send an outgoing packet from the droplet with source port 80 to home
router on port 80:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;yes | nc &lt;span class="nt"&gt;-p&lt;/span&gt; 80 &lt;span class="nt"&gt;-t&lt;/span&gt; y.y.y.y 80

&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;tcpdump &lt;span class="nt"&gt;-nn&lt;/span&gt; &lt;span class="nt"&gt;-vvv&lt;/span&gt; &lt;span class="nt"&gt;-i&lt;/span&gt; eth0 dst y.y.y.y and dst port 80 or src y.y.y.y and dst port 80
tcpdump: listening on eth0, link-type EN10MB &lt;span class="o"&gt;(&lt;/span&gt;Ethernet&lt;span class="o"&gt;)&lt;/span&gt;, capture size 262144 bytes
05:39:49.968049 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 18207, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF], proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 60&lt;span class="o"&gt;)&lt;/span&gt;
    x.x.x.x.80 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; y.y.y.y.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;S], cksum 0x6e4e &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0x16e9&lt;span class="o"&gt;)&lt;/span&gt;, seq 3260122744, win 29200, options &lt;span class="o"&gt;[&lt;/span&gt;mss 1460,sackOK,TS val 1175830887 ecr 0,nop,wscale 7], length 0
05:39:50.109076 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x28, ttl 49, id 0, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF], proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 60&lt;span class="o"&gt;)&lt;/span&gt;
    y.y.y.y.80 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x.x.x.x.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;S.], cksum 0x83e9 &lt;span class="o"&gt;(&lt;/span&gt;correct&lt;span class="o"&gt;)&lt;/span&gt;, seq 3723973951, ack 3260122745, win 28960, options &lt;span class="o"&gt;[&lt;/span&gt;mss 1440,sackOK,TS val 3637479403 ecr 1175830887,nop,wscale 7], length 0
05:39:50.109117 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 18208, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF], proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 52&lt;span class="o"&gt;)&lt;/span&gt;
    x.x.x.x.80 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; y.y.y.y.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;.], cksum 0x6e46 &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0x22b9&lt;span class="o"&gt;)&lt;/span&gt;, seq 1, ack 1, win 229, options &lt;span class="o"&gt;[&lt;/span&gt;nop,nop,TS val 1175830923 ecr 3637479403], length 0
05:39:50.109230 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 18209, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF], proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 2100&lt;span class="o"&gt;)&lt;/span&gt;
    x.x.x.x.80 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; y.y.y.y.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;P.], cksum 0x7646 &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0xf0cc&lt;span class="o"&gt;)&lt;/span&gt;, seq 1:2049, ack 1, win 229, options &lt;span class="o"&gt;[&lt;/span&gt;nop,nop,TS val 1175830923 ecr 3637479403], length 2048: HTTP
05:39:50.109280 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 18211, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF], proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 1480&lt;span class="o"&gt;)&lt;/span&gt;
    x.x.x.x.80 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; y.y.y.y.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;.], cksum 0x73da &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0x7def&lt;span class="o"&gt;)&lt;/span&gt;, seq 2049:3477, ack 1, win 229, options &lt;span class="o"&gt;[&lt;/span&gt;nop,nop,TS val 1175830923 ecr 3637479403], length 1428: HTTP
05:39:50.109299 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 18212, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF], proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 1480&lt;span class="o"&gt;)&lt;/span&gt;
    x.x.x.x.80 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; y.y.y.y.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;.], cksum 0x73da &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0x785b&lt;span class="o"&gt;)&lt;/span&gt;, seq 3477:4905, ack 1, win 229, options &lt;span class="o"&gt;[&lt;/span&gt;nop,nop,TS val 1175830923 ecr 3637479403], length 1428: HTTP
05:39:50.109331 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 18213, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF], proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 2908&lt;span class="o"&gt;)&lt;/span&gt;
    x.x.x.x.80 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; y.y.y.y.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;.], cksum 0x796e &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0xd5fd&lt;span class="o"&gt;)&lt;/span&gt;, seq 4905:7761, ack 1, win 229, options &lt;span class="o"&gt;[&lt;/span&gt;nop,nop,TS val 1175830923 ecr 3637479403], length 2856: HTTP
05:39:50.109349 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 18215, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF], proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 1480&lt;span class="o"&gt;)&lt;/span&gt;
    x.x.x.x.80 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; y.y.y.y.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;.], cksum 0x73da &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0x679f&lt;span class="o"&gt;)&lt;/span&gt;, seq 7761:9189, ack 1, win 229, options &lt;span class="o"&gt;[&lt;/span&gt;nop,nop,TS val 1175830923 ecr 3637479403], length 1428: HTTP
05:39:50.109371 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 18216, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF], proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 2908&lt;span class="o"&gt;)&lt;/span&gt;
    x.x.x.x.80 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; y.y.y.y.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;.], cksum 0x796e &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0xc541&lt;span class="o"&gt;)&lt;/span&gt;, seq 9189:12045, ack 1, win 229, options &lt;span class="o"&gt;[&lt;/span&gt;nop,nop,TS val 1175830923 ecr 3637479403], length 2856: HTTP
05:39:50.109390 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 18218, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF], proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 1480&lt;span class="o"&gt;)&lt;/span&gt;
    x.x.x.x.80 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; y.y.y.y.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;.], cksum 0x73da &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0x56e3&lt;span class="o"&gt;)&lt;/span&gt;, seq 12045:13473, ack 1, win 229, options &lt;span class="o"&gt;[&lt;/span&gt;nop,nop,TS val 1175830923 ecr 3637479403], length 1428: HTTP
05:39:50.251998 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x28, ttl 49, id 34134, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF], proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 40&lt;span class="o"&gt;)&lt;/span&gt;
    y.y.y.y.80 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; x.x.x.x.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;R], cksum 0x0de9 &lt;span class="o"&gt;(&lt;/span&gt;correct&lt;span class="o"&gt;)&lt;/span&gt;, seq 3723973952, win 0, length 0
05:39:50.252020 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x28, ttl 49, id 34135, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF], proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 40&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;TCP handshake and reset after all but they at least exchanged a few packets.
I wonder if we can catch where exactly http traffic drops. With traceroute we can
see where ICMP packets go but does that mean HTTP goes the same direction?
traceroute supports other options for example you can trace tcp SYN packets:
&lt;code&gt;traceroute -T -O syn —port=80 -n -N 1 -q 1 x.x.x.x&lt;/code&gt;. The tool creates packets
manually so that they are only 44 bytes long and they pass DPI see SYN-ACK:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;10:34:34.815998 IP (tos 0x0, ttl 19, id 61933, offset 0, flags [none], proto TCP (6), length 44)
    y.y.y.y.58057 &amp;gt; x.x.x.x.80: Flags [S], cksum 0x61ef (correct), seq 3848879829, win 5840, options [mss 1460], length 0
  0x0000:  4500 002c f1ed 0000 1306 9dd0 c0a8 0002  E..,............
  0x0010:  9f59 b80a e2c9 0050 e569 3ed5 0000 0000  .Y.....P.i&amp;gt;.....
  0x0020:  6002 16d0 61ef 0000 0204 05b4            `...a.......
10:34:34.974844 IP (tos 0x0, ttl 51, id 0, offset 0, flags [DF], proto TCP (6), length 44)
    x.x.x.x.80 &amp;gt; y.y.y.y.58057: Flags [S.], cksum 0x0feb (correct), seq 2544066339, ack 3848879830, win 29200, options [mss 1440], length 0
  0x0000:  4500 002c 0000 4000 3306 2fbe 9f59 b80a  E..,..@.3./..Y..
  0x0010:  c0a8 0002 0050 e2c9 97a3 5f23 e569 3ed6  .....P...._#.i&amp;gt;.
  0x0020:  6012 7210 0feb 0000 0204 05a0 0000       `.r...........
10:34:34.974909 IP (tos 0x0, ttl 64, id 61944, offset 0, flags [DF], proto TCP (6), length 40)
    y.y.y.y.58057 &amp;gt; x.x.x.x.80: Flags [R], cksum 0x9078 (correct), seq 3848879830, win 0, length 0
  0x0000:  4500 0028 f1f8 4000 4006 30c9 c0a8 0002  E..(..@.@.0.....
  0x0010:  9f59 b80a e2c9 0050 e569 3ed6 0000 0000  .Y.....P.i&amp;gt;.....
  0x0020:  5004 0000 9078 0000                      P....x..
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The real SYN packet from browser is 60 bytes and DPI drops it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;10:33:48.537807 IP (tos 0x0, ttl 19, id 54902, offset 0, flags [none], proto TCP (6), length 60)
    y.y.y.y.42193 &amp;gt; x.x.x.x.80: Flags [S], cksum 0xe900 (correct), seq 2785663221, win 5840, options [mss 1460,sackOK,TS val 1652926847 ecr 0,nop,wscale 2], length 0
  0x0000:  4500 003c d676 0000 1306 b937 c0a8 0002  E..&amp;lt;.v.....7....
  0x0010:  9f59 b80a a4d1 0050 a609 d8f5 0000 0000  .Y.....P........
  0x0020:  a002 16d0 e900 0000 0204 05b4 0402 080a  ................
  0x0030:  6285 a97f 0000 0000 0103 0302            b...........
10:33:48.563619 IP (tos 0x0, ttl 8, id 1, offset 0, flags [none], proto TCP (6), length 40)
    x.x.x.x.80 &amp;gt; y.y.y.y.42193: Flags [R], cksum 0x5ce1 (correct), seq 0, win 5840, length 0
  0x0000:  4500 0028 0001 0000 0806 9ac1 9f59 b80a  E..(.........Y..
  0x0010:  c0a8 0002 0050 a4d1 0000 0000 a609 d8f5  .....P..........
  0x0020:  5004 16d0 5ce1 0000 0000 0000 0000       P...\.........
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This all suggests that provider definitely dropped packets while they said they
didn&amp;rsquo;t to me.&lt;/p&gt;

&lt;p&gt;Overall I feel disappointed about the road internet march nowadays. It started
like a small network with purpose of exchanging data for research, helping
humankind to solve issues or at least doing something meaningful.
Instead I feel more like a resource that big company can sell and goverment can
control limiting my view. They all either earn money or get benefit trading you
but the thing is you don&amp;rsquo;t get anything out of it.&lt;/p&gt;

&lt;h3&gt;A few words about GPON&lt;/h3&gt;

&lt;p&gt;The text below is true for many ISPs. There are many downsides of GPON you can
read articles about it in the footer but for me it&amp;rsquo;s inability to set up my own
or at least high quality router instead of the one given by provider. You as a
customer will rent a router from them. The router usually goes with buggy
firmware, remote access for provider and inability to set it to the bridge mode.
In other words it is a useless piece of trash which you will own as you redeem
it during 2 years and you cannot buy another one and replace this shit because
it simply won&amp;rsquo;t work with GPON. Also &lt;a href="https://habr.com/post/113086/"&gt;Rostelekom is the biggest player&lt;/a&gt;
in Russia and has tight realtionship with goverment so I prefer stayng as far
away as possible from them and pay to a smaller provider to keep it on the air.&lt;/p&gt;

&lt;h3&gt;A way to bypass restrictions&lt;/h3&gt;

&lt;p&gt;I want my internet to work w/o restrictions and I don&amp;rsquo;t want to set up tunnels
on every signle device. In other words router should set up the tunnel and route
traffic accordingly. My new toy is &lt;a href="https://mikrotik.com/product/hap_ac2"&gt;Mikrotik hap ac2&lt;/a&gt;
and I&amp;rsquo;m very happy with it. It supports many cool features, the speed is great
and hardware accelearation for IPsec should speed it up even more.&lt;/p&gt;

&lt;p&gt;I have bought a server overseas, let&amp;rsquo;s setup GRE tunnel between router and a
server(&lt;code&gt;x.x.x.x&lt;/code&gt; - server&amp;rsquo;s white IP, &lt;code&gt;y.y.y.y&lt;/code&gt; - router&amp;rsquo;s white IP), the
network IP address inside the tunnel will be &lt;code&gt;192.168.0.1&lt;/code&gt; for server and
&lt;code&gt;192.168.0.2&lt;/code&gt; for router, my home network behind router is &lt;code&gt;192.168.88.0/24&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo cat&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;EOF&lt;/span&gt;&lt;span class="sh"&gt; &amp;gt;&amp;gt; /etc/network/interfaces
 iface tun1 inet static
    address 192.168.0.1
    netmask 255.255.255.0
    mtu 1456
    pre-up iptunnel add tun1 mode gre local x.x.x.x remote y.y.y.y ttl 255
    up ifconfig tun1 multicast
    pointopoint 192.168.0.2
    post-down iptunnel del tun1
 up ip ro add 192.168.88.0/24 via 192.168.0.2
&lt;/span&gt;&lt;span class="no"&gt;EOF

&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo echo&lt;/span&gt; &lt;span class="s2"&gt;"net.ipv4.ip_forward = 1"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/sysctl.conf
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;sysctl &lt;span class="nt"&gt;-p&lt;/span&gt; &lt;span class="c"&gt;# check if it's set properly&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;iptables &lt;span class="nt"&gt;-t&lt;/span&gt; nat &lt;span class="nt"&gt;-A&lt;/span&gt; POSTROUTING &lt;span class="nt"&gt;-o&lt;/span&gt; ens3 &lt;span class="nt"&gt;-j&lt;/span&gt; MASQUERADE
&lt;span class="nv"&gt;$ &lt;/span&gt;ifdown tun1 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ifup tun1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On the router:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;/interface gre add &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"gre-tunnel1"&lt;/span&gt; &lt;span class="nv"&gt;mtu&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;auto local-address&lt;span class="o"&gt;=&lt;/span&gt;y.y.y.y remote-address&lt;span class="o"&gt;=&lt;/span&gt;x.x.x.x clamp-tcp-mss&lt;span class="o"&gt;=&lt;/span&gt;yes dont-fragment&lt;span class="o"&gt;=&lt;/span&gt;no allow-fast-path&lt;span class="o"&gt;=&lt;/span&gt;yes
/ip address add &lt;span class="nv"&gt;address&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;192.168.0.2/24 &lt;span class="nv"&gt;network&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;192.168.0.0 &lt;span class="nv"&gt;interface&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;gre-tunnel1

/ip firewall mangle
add &lt;span class="nv"&gt;chain&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;forward &lt;span class="nv"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;change-mss new-mss&lt;span class="o"&gt;=&lt;/span&gt;clamp-to-pmtu &lt;span class="nv"&gt;passthrough&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;no tcp-flags&lt;span class="o"&gt;=&lt;/span&gt;syn &lt;span class="nv"&gt;protocol&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;tcp &lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="nt"&gt;-interface&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;gre-tunnel1 tcp-mss&lt;span class="o"&gt;=&lt;/span&gt;1300-65535 &lt;span class="nv"&gt;log&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;no log-prefix&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;
add &lt;span class="nv"&gt;chain&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;forward &lt;span class="nv"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;change-mss new-mss&lt;span class="o"&gt;=&lt;/span&gt;clamp-to-pmtu &lt;span class="nv"&gt;passthrough&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;no tcp-flags&lt;span class="o"&gt;=&lt;/span&gt;syn &lt;span class="nv"&gt;protocol&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;tcp out-interface&lt;span class="o"&gt;=&lt;/span&gt;gre-tunnel1 tcp-mss&lt;span class="o"&gt;=&lt;/span&gt;1300-65535 &lt;span class="nv"&gt;log&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;no log-prefix&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;

/ip route
add &lt;span class="nv"&gt;comment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;linkedin &lt;span class="nv"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1 dst-address&lt;span class="o"&gt;=&lt;/span&gt;91.225.248.0/22 &lt;span class="nv"&gt;gateway&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;gre-tunnel1
add &lt;span class="nv"&gt;comment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;linkedin &lt;span class="nv"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1 dst-address&lt;span class="o"&gt;=&lt;/span&gt;108.174.0.0/20 &lt;span class="nv"&gt;gateway&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;gre-tunnel1
add &lt;span class="nv"&gt;comment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;linkedin &lt;span class="nv"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1 dst-address&lt;span class="o"&gt;=&lt;/span&gt;185.63.144.0/22 &lt;span class="nv"&gt;gateway&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;gre-tunnel1
add &lt;span class="nv"&gt;comment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;rutracker &lt;span class="nv"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1 dst-address&lt;span class="o"&gt;=&lt;/span&gt;195.82.146.0/24 &lt;span class="nv"&gt;gateway&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;gre-tunnel1
add &lt;span class="nv"&gt;comment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;telegram &lt;span class="nv"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1 dst-address&lt;span class="o"&gt;=&lt;/span&gt;149.154.164.0/22 &lt;span class="nv"&gt;gateway&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;gre-tunnel1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can now open all sites you added routes to; the packets for them now flow
thru the tunnel. That&amp;rsquo;s it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.eff.org/cyberspace-independence"&gt;Cyberspace independence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lookatme.ru/mag/magazine/russian-internet/207489-decentralization"&gt;Decentralization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.newyorker.com/tech/elements/the-mission-to-decentralize-the-internet"&gt;The mission to decentralize the internet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dyn.com/blog/could-it-happen-in-your-countr/"&gt;Could it happen in your country&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dyn.com/blog/vast-world-of-fraudulent-routing/"&gt;Vast world of fraudulent routing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dyn.com/blog/latest-isps-to-hijack/"&gt;Latest ISPs to hijack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pierrekim.github.io/blog/2016-11-01-gpon-ftth-networks-insecurity.html"&gt;GPON FTTH networks (in)security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lurkmore.to/GPON"&gt;Lurkmore GPON&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Slow query with ActiveRecord's method first</title>
    <link rel="alternate" href="/2018/04/12/stop-using-active-record-first.html"/>
    <id>/2018/04/12/stop-using-active-record-first.html</id>
    <published>2018-04-12T00:00:00+03:00</published>
    <updated>2018-04-12T00:00:00+03:00</updated>
    <author>
      <name>Dmitry Vorotilin</name>
    </author>
    <summary type="html">&lt;p&gt;If you’ve grown with Rails like me you know that everyone used and perhaps still
uses everywhere &lt;code&gt;first&lt;/code&gt; method. You just type it automatically. I know that it’s
so simple that it doesn’t even deserve a post but you have to stop doing that.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/irb.png" class="img-fluid" alt="irb"&gt;&lt;/p&gt;

&lt;p&gt;Things...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;If you&amp;rsquo;ve grown with Rails like me you know that everyone used and perhaps still
uses everywhere &lt;code&gt;first&lt;/code&gt; method. You just type it automatically. I know that it&amp;rsquo;s
so simple that it doesn&amp;rsquo;t even deserve a post but you have to stop doing that.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/irb.png" class="img-fluid" alt="irb"&gt;&lt;/p&gt;

&lt;p&gt;Things are getting more intersting with PostgreSQL v10:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;EXPLAIN&lt;/span&gt; &lt;span class="k"&gt;ANALYZE&lt;/span&gt; &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="nv"&gt;"posts"&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="nv"&gt;"posts"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;"deleted_at"&lt;/span&gt; &lt;span class="k"&gt;IS&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="nv"&gt;"posts"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;"user_id"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;order&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;ASC&lt;/span&gt; &lt;span class="k"&gt;limit&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                                                                    &lt;span class="n"&gt;QUERY&lt;/span&gt; &lt;span class="n"&gt;PLAN&lt;/span&gt;                                                                    
&lt;span class="c1"&gt;--------------------------------------------------------------------------------------------------------------------------------------------------&lt;/span&gt;
 &lt;span class="k"&gt;Limit&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;91&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;327&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;actual&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;37557&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;875&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;37557&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;875&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;loops&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;  &lt;span class="k"&gt;Index&lt;/span&gt; &lt;span class="n"&gt;Scan&lt;/span&gt; &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;posts_pkey&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;posts&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;2057670&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;78&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;76800&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;327&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;actual&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;37557&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;874&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;37557&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;874&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;loops&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
         &lt;span class="n"&gt;Filter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;deleted_at&lt;/span&gt; &lt;span class="k"&gt;IS&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
         &lt;span class="k"&gt;Rows&lt;/span&gt; &lt;span class="n"&gt;Removed&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="n"&gt;Filter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;26826499&lt;/span&gt;
 &lt;span class="n"&gt;Planning&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;202&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;
 &lt;span class="n"&gt;Execution&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;37557&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;905&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Doesn&amp;rsquo;t it look creepy? According to &lt;a href="https://stackoverflow.com/questions/21385555/postgresql-query-very-slow-with-limit-1"&gt;stackoverflow&lt;/a&gt;
it can be an issue in the planner and given that you have pretty large table
this query becomes drastically slower than planned. So a combination of two
issues results in a waste of time for investigation. First of all it shouldn&amp;rsquo;t
have happened if we used &lt;code&gt;take&lt;/code&gt; method added &lt;a href="https://github.com/rails/rails/commit/1379375f93c53d4c49fa8592b6117c3ade263f2e"&gt;long ago&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;EXPLAIN&lt;/span&gt; &lt;span class="k"&gt;ANALYZE&lt;/span&gt; &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="nv"&gt;"posts"&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="nv"&gt;"posts"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;"deleted_at"&lt;/span&gt; &lt;span class="k"&gt;IS&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="nv"&gt;"posts"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;"user_id"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;limit&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                                                     &lt;span class="n"&gt;QUERY&lt;/span&gt; &lt;span class="n"&gt;PLAN&lt;/span&gt;                                                     
&lt;span class="c1"&gt;--------------------------------------------------------------------------------------------------------------------&lt;/span&gt;
 &lt;span class="k"&gt;Limit&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;327&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;actual&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;979&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;979&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;loops&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;  &lt;span class="n"&gt;Seq&lt;/span&gt; &lt;span class="n"&gt;Scan&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;posts&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;1029108&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;93&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;76800&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;327&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;actual&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;978&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;978&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;loops&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
         &lt;span class="n"&gt;Filter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;deleted_at&lt;/span&gt; &lt;span class="k"&gt;IS&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
         &lt;span class="k"&gt;Rows&lt;/span&gt; &lt;span class="n"&gt;Removed&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="n"&gt;Filter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3463&lt;/span&gt;
 &lt;span class="n"&gt;Planning&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;606&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;
 &lt;span class="n"&gt;Execution&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;047&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Force yourself typing &lt;code&gt;take&lt;/code&gt; instead of &lt;code&gt;first&lt;/code&gt; if you don&amp;rsquo;t care about the
order which in most cases is true.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Query Trail</title>
    <link rel="alternate" href="/2014/08/10/query-trail.html"/>
    <id>/2014/08/10/query-trail.html</id>
    <published>2014-08-10T00:00:00+04:00</published>
    <updated>2014-08-10T00:00:00+04:00</updated>
    <author>
      <name>Dmitry Vorotilin</name>
    </author>
    <summary type="html">&lt;p&gt;Recently I switched on a project with lots of legacy code. It was on Rails 2,
Rails 3 and now I’ve updated it to Rails 4.1. You can’t even imagine how much
rubbish I got rid of. But the thing I’d like to share with you today is
&lt;a href="https://github.com/route/query_trail"&gt;QueryTrail&lt;/a&gt;. This simple...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Recently I switched on a project with lots of legacy code. It was on Rails 2,
Rails 3 and now I&amp;rsquo;ve updated it to Rails 4.1. You can&amp;rsquo;t even imagine how much
rubbish I got rid of. But the thing I&amp;rsquo;d like to share with you today is
&lt;a href="https://github.com/route/query_trail"&gt;QueryTrail&lt;/a&gt;. This simple but useful gem
shows you the backtrace of fired queries. You have to agree that when just one
action of your controller sends hundreds sql requests from helpers, templates
and so forth, it&amp;rsquo;s definitely hard to locate the place for specific query. But
not for now:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;User Load (0.4ms)  SELECT  `users`.* FROM `users`  WHERE `users`.`id` = 1 LIMIT 1
Query Trail: config/initializers/warden.rb:11:in `block in &amp;lt;top (required)&amp;gt;'
             config/initializers/warden.rb:15:in `block in &amp;lt;top (required)&amp;gt;'
Doc Load (18.2ms)  SELECT `docs`.* FROM `docs`  WHERE `docs`.`approved` = 1
Query Trail: app/views/main/_docs.html.erb:2
             app/helpers/docs_helper.rb:3:in `render_main_block'
             app/views/main/index.html.erb:13
             app/views/main/index.html.erb:9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Rails autoloading</title>
    <link rel="alternate" href="/2013/11/13/rails-autoloading.html"/>
    <id>/2013/11/13/rails-autoloading.html</id>
    <published>2013-11-13T00:00:00+04:00</published>
    <updated>2013-11-13T00:00:00+04:00</updated>
    <author>
      <name>Dmitry Vorotilin</name>
    </author>
    <summary type="html">&lt;p&gt;There is much to be said about Rails autoloading and particularly about
&lt;code&gt;ActiveSupport::Dependencies&lt;/code&gt; (&lt;code&gt;AS::D&lt;/code&gt; for short). What does it do? As the title
says it loads constants automatically and reloads your code catching changes on
every request. Ok,...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;There is much to be said about Rails autoloading and particularly about
&lt;code&gt;ActiveSupport::Dependencies&lt;/code&gt; (&lt;code&gt;AS::D&lt;/code&gt; for short). What does it do? As the title
says it loads constants automatically and reloads your code catching changes on
every request. Ok, why do we need it? Because it&amp;rsquo;s convenient! We don&amp;rsquo;t have to
write &lt;code&gt;require&lt;/code&gt; in every single file and watch which constants we need and when.
Rails loads constants and tracks what we need automatically. Also there&amp;rsquo;s no
need to reload your server every time you&amp;rsquo;ve made a change. There are some
pitfalls that you must know, but once you learn them everything will be ok.&lt;/p&gt;

&lt;h3&gt;How it works&lt;/h3&gt;

&lt;p&gt;Previously discussed method &lt;code&gt;self.const_missing(const_name)&lt;/code&gt; is the entry point
for &lt;code&gt;AS::D&lt;/code&gt;. Consider this example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# /autoloadable/a.rb&lt;/span&gt;
&lt;span class="c1"&gt;# module A&lt;/span&gt;
&lt;span class="c1"&gt;# end&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'active_support/dependencies'&lt;/span&gt;
&lt;span class="no"&gt;ActiveSupport&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Dependencies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;autoload_paths&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'/autoloadable'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="no"&gt;A&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;AS::D&lt;/code&gt; loads module &lt;code&gt;A&lt;/code&gt; automatically without any &lt;code&gt;require&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Meanwhile you can add sleep here and make changes in a.rb&lt;/span&gt;

&lt;span class="no"&gt;ActiveSupport&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Dependencies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;clear&lt;/span&gt; &lt;span class="c1"&gt;# Removes A from memory&lt;/span&gt;

&lt;span class="no"&gt;A&lt;/span&gt; &lt;span class="c1"&gt;# Will load A again&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I&amp;rsquo;ve just introduced the method Rails reloads your code with — &lt;code&gt;clear&lt;/code&gt;. Let&amp;rsquo;s
dig dipper and see how &lt;code&gt;AS::D&lt;/code&gt; actually works. There are two different constant
loading strategy: &lt;code&gt;:require&lt;/code&gt; and &lt;code&gt;:load&lt;/code&gt;(default). The first one means that all
the constants won&amp;rsquo;t be reloaded, as &lt;code&gt;require&lt;/code&gt; does eventually. The last one
means that all the constants will be removed from memory and loaded again on
demand. What does removing constant from memory mean? There&amp;rsquo;s a method called
&lt;code&gt;Module#remove_const(sym)&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;A&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="no"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:remove_const&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'A'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="no"&gt;A&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; uninitialized constant A (NameError)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But what if we remove constant for existing instance of a class:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;value&lt;/span&gt;
    &lt;span class="s1"&gt;'value'&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
&lt;span class="no"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:remove_const&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'A'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;class&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; A&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;class&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;value&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; 'value'&lt;/span&gt;
&lt;span class="no"&gt;A&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; uninitialized constant A (NameError)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;rsquo;s interesting because constant name was removed from memory but its
instance still shows us its class and we can even call class methods on it. It
turns out that this method only removes constant name from &lt;code&gt;Object&lt;/code&gt; but a class
is an object and a constant is a variable referencing that object still exists
in the memory. Ok, move on.&lt;/p&gt;

&lt;p&gt;Calling &lt;code&gt;require &amp;#39;active_support/dependencies&amp;#39;&lt;/code&gt; injects a few modules into basic
Ruby classes via &lt;code&gt;AS::D.hook!&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hook!&lt;/span&gt;
  &lt;span class="no"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;class_eval&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;Loadable&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="no"&gt;Module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;class_eval&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;ModuleConstMissing&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="no"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;class_eval&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;Blamable&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Methods injected into &lt;code&gt;Object&lt;/code&gt; overwrite methods like &lt;code&gt;load&lt;/code&gt; and &lt;code&gt;require&lt;/code&gt; in
order to monitor new constants, that said, it depends on loading strategy.
Another method you could already know is &lt;code&gt;require_dependency&lt;/code&gt; also injected into
&lt;code&gt;Object&lt;/code&gt;. Methods in &lt;code&gt;Module&lt;/code&gt; define an entry point &lt;code&gt;const_missing&lt;/code&gt;. I&amp;rsquo;m going
to show you how &lt;code&gt;AS::D&lt;/code&gt; works with this example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# /autoloadable/a.rb&lt;/span&gt;
&lt;span class="c1"&gt;# module A&lt;/span&gt;
&lt;span class="c1"&gt;# end&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'active_support/dependencies'&lt;/span&gt;
&lt;span class="no"&gt;ActiveSupport&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Dependencies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;autoload_paths&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'/autoloadable'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="no"&gt;A&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Declaring constant &lt;code&gt;A&lt;/code&gt; triggers &lt;code&gt;Module#const_missing&lt;/code&gt;, that was overwritten
by &lt;code&gt;AS::D&lt;/code&gt; and &lt;code&gt;Dependencies.load_missing_constant(from_mod, const_name)&lt;/code&gt; is
invoked. The first argument is &lt;code&gt;Object&lt;/code&gt; because &lt;code&gt;A == Object::A&lt;/code&gt; the second is
&lt;code&gt;:A&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;load_missing_constant&lt;/code&gt; tries to find the path for this constant which by
convention lies somewhere in one of the &lt;code&gt;autoload_paths&lt;/code&gt; by means of
&lt;code&gt;search_for_file(&amp;#39;a&amp;#39;)&lt;/code&gt;. It just returns the first file it can find with
&lt;code&gt;File.file?(File.join(autoload_path, &amp;#39;a.rb&amp;#39;))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Then &lt;code&gt;require_or_load&lt;/code&gt; method is invoked, whose behavior depends on loading
strategy. For &lt;code&gt;require&lt;/code&gt; it just requires the given file, for &lt;code&gt;load&lt;/code&gt;
&lt;code&gt;load_file(&amp;#39;/autoloadable/a.rb&amp;#39;, &amp;#39;A&amp;#39;)&lt;/code&gt; is invoked.&lt;/li&gt;
&lt;li&gt;Then it looks for new constants in given namespaces with:
&lt;code&gt;new_constants_in(*parent_paths) { Kernel.load(path) }&lt;/code&gt;
where &lt;code&gt;parent_paths&lt;/code&gt; is &lt;code&gt;[Object]&lt;/code&gt;, because we try to resolve &lt;code&gt;Object::A&lt;/code&gt; and
&lt;code&gt;path&lt;/code&gt; is the path to file. How does it monitor it? It&amp;rsquo;s just the difference
between the array of constants before and after. &lt;code&gt;Object.local_constants&lt;/code&gt; gives
us all the constants inside &lt;code&gt;Object&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;When it&amp;rsquo;s done, all newly defined constants append to &lt;code&gt;autoloaded_constants&lt;/code&gt;.
That&amp;rsquo;s all, new constant was defined with &lt;code&gt;AS::D&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;AS::D.clear&lt;/code&gt; removes constants from memory and clears all the auto-loaded
constants inside &lt;code&gt;AS::D&lt;/code&gt;. Pay your attention to &lt;code&gt;require_dependency&lt;/code&gt;. This
method adds all newly defined constants to &lt;code&gt;autoloaded_constants&lt;/code&gt; so that they
will be reloaded unlike the &lt;code&gt;require&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;Another convention &lt;code&gt;AS::D&lt;/code&gt; uses is a path convention. This example
&lt;code&gt;&amp;#39;A::B&amp;#39;.underscore # =&amp;gt; &amp;#39;a/b&amp;#39;&lt;/code&gt; simply illustrates that &lt;code&gt;::&lt;/code&gt; is treated as a &lt;code&gt;/&lt;/code&gt;,
which gives us ability to use folders like module namespaces:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# /autoloadable/a.rb&lt;/span&gt;
&lt;span class="c1"&gt;# module A&lt;/span&gt;
&lt;span class="c1"&gt;# end&lt;/span&gt;

&lt;span class="c1"&gt;# /autoloadable/a/b.rb&lt;/span&gt;
&lt;span class="c1"&gt;# module A&lt;/span&gt;
&lt;span class="c1"&gt;#   module B&lt;/span&gt;
&lt;span class="c1"&gt;#     C = 'c'&lt;/span&gt;
&lt;span class="c1"&gt;#   end&lt;/span&gt;
&lt;span class="c1"&gt;# end&lt;/span&gt;

&lt;span class="no"&gt;A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;B&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'c'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or even so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# /autoloadable/a/b.rb&lt;/span&gt;
&lt;span class="c1"&gt;# module A::B&lt;/span&gt;
&lt;span class="c1"&gt;#   C = 'c'&lt;/span&gt;
&lt;span class="c1"&gt;# end&lt;/span&gt;

&lt;span class="no"&gt;A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;B&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'c'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Although we haven&amp;rsquo;t defined module &lt;code&gt;A&lt;/code&gt;, it has been created for us automatically
because of existing directory &lt;code&gt;a&lt;/code&gt;. It&amp;rsquo;s really convinient, because you are not
forced to create an empty module just for namespacing purpose.&lt;/p&gt;

&lt;h3&gt;Misconception&lt;/h3&gt;

&lt;p&gt;Since Ruby passes only one argument to &lt;code&gt;const_missing(const_name)&lt;/code&gt; we don&amp;rsquo;t have
an idea about the nesting, this example works as expected:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# /autoloadable/b.rb&lt;/span&gt;
&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;B&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="c1"&gt;# /autoloadable/a.rb&lt;/span&gt;
&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;A&lt;/span&gt;
  &lt;span class="no"&gt;B&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; B&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;but this shows wrong results:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# /autoloadable/a.rb&lt;/span&gt;
&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;A&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="c1"&gt;# /autoloadable/b.rb&lt;/span&gt;
&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;B&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="no"&gt;A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;B&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; B&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Is that right? I don&amp;rsquo;t think so. If we had used pure Ruby it would have thrown
&lt;code&gt;NameError: uninitialized constant A::B&lt;/code&gt;, because we explicitly said we need &lt;code&gt;B&lt;/code&gt;
inside of &lt;code&gt;A&lt;/code&gt; but not the top-level &lt;code&gt;B&lt;/code&gt;. But this is Ruby&amp;rsquo;s fault it passes so
little info to &lt;code&gt;const_missing&lt;/code&gt; and &lt;code&gt;AS::D&lt;/code&gt; can do nothing with it.&lt;/p&gt;

&lt;p&gt;Another cool case:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# /autoloadable/a.rb&lt;/span&gt;
&lt;span class="c1"&gt;# module A; end&lt;/span&gt;

&lt;span class="c1"&gt;# /autoloadable/namespace/a/b.rb&lt;/span&gt;
&lt;span class="c1"&gt;# module Namespace::A::B&lt;/span&gt;
&lt;span class="c1"&gt;#  A&lt;/span&gt;
&lt;span class="c1"&gt;# end&lt;/span&gt;

&lt;span class="no"&gt;Namespace&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;B&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; What is A inside this namespace?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What would you expect from this example? I think in Ruby it&amp;rsquo;s obviously
top-level &lt;code&gt;A&lt;/code&gt;, but since &lt;code&gt;AS::D&lt;/code&gt; doesn&amp;rsquo;t know about nesting, would you expect it
to be either &lt;code&gt;Namespace::A&lt;/code&gt; or &lt;code&gt;A&lt;/code&gt;? Neither, because it&amp;rsquo;s &lt;code&gt;NameError&lt;/code&gt;, which is
much more confusing. It&amp;rsquo;s the last attempt of &lt;code&gt;AS::D&lt;/code&gt; to make an assumption that
since one of our parents has this constant
&lt;code&gt;Namespace.const_defined?(:A, false) # =&amp;gt; true&lt;/code&gt; then we&amp;rsquo;re definitely looking
for this constant in a short form &lt;code&gt;from_mod::const_name&lt;/code&gt;, otherwise Ruby would
return it without calling &lt;code&gt;const_missing&lt;/code&gt; and we don&amp;rsquo;t have to search it upwards
in &lt;code&gt;from_mod&lt;/code&gt;. Why don&amp;rsquo;t we have to search it right at the top-level? May be
because of this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# c.rb&lt;/span&gt;
&lt;span class="c1"&gt;# C = 'c'&lt;/span&gt;

&lt;span class="c1"&gt;# a/c.rb&lt;/span&gt;
&lt;span class="c1"&gt;# module A&lt;/span&gt;
&lt;span class="c1"&gt;#   C = 'ac'&lt;/span&gt;
&lt;span class="c1"&gt;# end&lt;/span&gt;

&lt;span class="c1"&gt;# a/b.rb&lt;/span&gt;
&lt;span class="c1"&gt;# module A::B&lt;/span&gt;
&lt;span class="c1"&gt;#   C&lt;/span&gt;
&lt;span class="c1"&gt;# end&lt;/span&gt;

&lt;span class="no"&gt;A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;B&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;C&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; 'ac'&lt;/span&gt;
&lt;span class="no"&gt;A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;B&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;C&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; uninitialized constant A::B::C&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Calling it twice gives us an error, because of the same case we&amp;rsquo;ve considered
above. The first time &lt;code&gt;AS::D&lt;/code&gt; resolves &lt;code&gt;C&lt;/code&gt; through as usual, but the second time
it starts checking enclosing modules and since &lt;code&gt;A&lt;/code&gt; contains &lt;code&gt;C&lt;/code&gt; then Ruby must
have resolved it or otherwise it&amp;rsquo;s the short form and an error is thrown.
Imagine we&amp;rsquo;ve fixed it and instead of error we start loading top level constant.
Is it any better? Now we have two different constants calling it twice in a row,
which is still sad. That&amp;rsquo;s why I&amp;rsquo;d prefer an error.&lt;/p&gt;

&lt;h3&gt;Thread safety&lt;/h3&gt;

&lt;p&gt;Let&amp;rsquo;s write our own simplified autoloading:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# autoloadable/a.rb&lt;/span&gt;
&lt;span class="c1"&gt;# module A&lt;/span&gt;
&lt;span class="c1"&gt;#   sleep 5&lt;/span&gt;
&lt;span class="c1"&gt;#   def self.hello&lt;/span&gt;
&lt;span class="c1"&gt;#     'hello'&lt;/span&gt;
&lt;span class="c1"&gt;#   end&lt;/span&gt;
&lt;span class="c1"&gt;# end&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Module&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;const_missing&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"./autoloadable/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;downcase&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.rb"&lt;/span&gt;
    &lt;span class="no"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;const_get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="no"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hello&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="no"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hello&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The result is &lt;code&gt;undefined method &amp;#39;hello&amp;#39; for A:Module (NoMethodError)&lt;/code&gt;. Why?
Because second thread takes over when the first is awaiting sleeping. At that
moment module &lt;code&gt;A&lt;/code&gt; is already defined but method &lt;code&gt;hello&lt;/code&gt; isn&amp;rsquo;t defined yet. It
turns out that &lt;code&gt;AS::D&lt;/code&gt; will never be thread safe until &lt;code&gt;const_missing&lt;/code&gt; isn&amp;rsquo;t
thread safe. That&amp;rsquo;s the reason why your production environment loads all the
constants on initialization step. In fact, you can see different errors even
with MRI, because it switches threads when waits for input-ouput or network. For
instance, circular dependency arises, when the first thread waits for
input-ouput and another thread starts resolving the same constant, which is
already in the list of loaded.&lt;/p&gt;

&lt;h3&gt;Known errors&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Toplevel constant B referenced by A::B&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Have you ever seen the &amp;lsquo;Toplevel constant B referenced by A::B&amp;rsquo;? It&amp;rsquo;s easy to
reproduce even without &lt;code&gt;AS::D&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;B&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="no"&gt;A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;B&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since &lt;code&gt;A.ancestors&lt;/code&gt; is &lt;code&gt;[A, Object, Kernel, BasicObject]&lt;/code&gt; and contains class
&lt;code&gt;Object&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; are already defined as top level constants, Ruby shows us a
warning that constant we&amp;rsquo;re trying to resolve inside &lt;code&gt;A&lt;/code&gt; references top level
constant. Notice that for modules the situation is different:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;B&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;A&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="no"&gt;A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;B&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It gives us just &amp;lsquo;uninitialized constant A::B (NameError)&amp;rsquo; because the ancestors
chain doesn&amp;rsquo;t contain &lt;code&gt;Object&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Circular dependency detected while autoloading constant&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is yet another &lt;code&gt;AS::D&lt;/code&gt; error that you could see:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# /autoloadable/a.rb&lt;/span&gt;
&lt;span class="c1"&gt;# B&lt;/span&gt;
&lt;span class="c1"&gt;# module A&lt;/span&gt;
&lt;span class="c1"&gt;# end&lt;/span&gt;

&lt;span class="c1"&gt;# /autoloadable/b.rb&lt;/span&gt;
&lt;span class="c1"&gt;# A&lt;/span&gt;
&lt;span class="c1"&gt;# module B&lt;/span&gt;
&lt;span class="c1"&gt;# end&lt;/span&gt;

&lt;span class="no"&gt;A&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If we try to access constant &lt;code&gt;A&lt;/code&gt; we&amp;rsquo;ll see this error. &lt;code&gt;AS::D&lt;/code&gt; makes an
assumption that this constant is defined in file &lt;code&gt;a.rb&lt;/code&gt;. When it loads this file
it finds another undefined constant &lt;code&gt;B&lt;/code&gt; and this time faces still undefined &lt;code&gt;A&lt;/code&gt;
while loading file &lt;code&gt;b.rb&lt;/code&gt;. This generates infinite recursion and to prevent it
an error must be raised. This error as and many others also appears in
multi-threaded environment.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A copy of &lt;code&gt;A&lt;/code&gt; has been removed from the module tree but is still active!&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# /autoloadable/money.rb&lt;/span&gt;
&lt;span class="c1"&gt;# class Money&lt;/span&gt;
&lt;span class="c1"&gt;# end&lt;/span&gt;

&lt;span class="c1"&gt;# /autoloadable/customer.rb&lt;/span&gt;
&lt;span class="c1"&gt;# class Customer&lt;/span&gt;
&lt;span class="c1"&gt;#   def money&lt;/span&gt;
&lt;span class="c1"&gt;#     Money.new&lt;/span&gt;
&lt;span class="c1"&gt;#   end&lt;/span&gt;
&lt;span class="c1"&gt;# end&lt;/span&gt;

&lt;span class="n"&gt;customer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;

&lt;span class="no"&gt;ActiveSupport&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Dependencies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;clear&lt;/span&gt;

&lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;money&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It happens because class for &lt;code&gt;Customer&lt;/code&gt; was autoloaded, but class for &lt;code&gt;Money&lt;/code&gt;
wasn&amp;rsquo;t because we haven&amp;rsquo;t invoked &lt;code&gt;Money.new&lt;/code&gt; before &lt;code&gt;AS::D.clear&lt;/code&gt;. Then
&lt;code&gt;Customer&lt;/code&gt; was removed as a reference, but instance of this class is still in
memory, and then we&amp;rsquo;re trying to resolve constant name &lt;code&gt;Money&lt;/code&gt;, but for
&lt;code&gt;customer.class::Money&lt;/code&gt; which is different from newly loaded &lt;code&gt;Customer&lt;/code&gt;. Please
note that saving the whole instance somewhere between sessions increases chances
you&amp;rsquo;ll see this error.&lt;/p&gt;

&lt;h3&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;You don&amp;rsquo;t have to care about all this stuff if you have flat hierarchy. It means
when you don&amp;rsquo;t use namespaces and all the files have different names, but it&amp;rsquo;s
hard if you have a lot of classes/modules. So you must have clear understanding
of this if you don&amp;rsquo;t want to be in trouble:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Don&amp;rsquo;t use the same name for top-level and namespaced constants.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be careful when you use short form declaration unless you know what you do.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be careful if you use short form declaration and it contains the name of the
constant you try to resolve, use full path instead.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Carefully work with constants in initializers, you may declare new constant
instead of loading original.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Try to run you application with eager loading or in production mode since it
may load your code in another order.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Links and used sources:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.plataformatec.com.br/2012/08/eager-loading-for-greater-good/"&gt;Eager loading&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://urbanautomaton.com/blog/2013/08/27/rails-autoloading-hell/"&gt;Rails autoloading&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tenderlovemaking.com/2012/06/18/removing-config-threadsafe.html"&gt;Removing config.threadsafe!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
