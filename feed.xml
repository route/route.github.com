<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2018-04-23T20:00:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Telegram drama</title>
    <link rel="alternate" href="/2018/04/24/telegram-drama.html"/>
    <id>/2018/04/24/telegram-drama.html</id>
    <published>2018-04-23T20:00:00Z</published>
    <updated>2018-04-23T20:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;I didn&amp;#39;t write a word in the blog for almost 4 years because I didn&amp;#39;t have time
or most likely motivation to do it. But current circumstances forced me.&lt;/p&gt;

&lt;p&gt;In my childhood internet and network looked like a magick. In movies they showed
something like ping output and I definitely thought that someone hacked someone&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;I didn&amp;#39;t write a word in the blog for almost 4 years because I didn&amp;#39;t have time
or most likely motivation to do it. But current circumstances forced me.&lt;/p&gt;

&lt;p&gt;In my childhood internet and network looked like a magick. In movies they showed
something like ping output and I definitely thought that someone hacked someone
else.&lt;/p&gt;

&lt;p&gt;&lt;img alt="hacking" src="https://www.techworm.net/wp-content/uploads/2016/03/Movies-Based-On-Hacking-e1457858868314.png" /&gt;&lt;/p&gt;

&lt;p&gt;I&amp;#39;m located in Russia and I work for Chicago based startup thanks 21st century
for remote. We have our servers on AWS and DigitalOcean. Thereon this long
summer story ends as bloody winter is coming.&lt;/p&gt;

&lt;p&gt;Recently media regulator Roskomnadzor started to block Telegram IP addresses
because the latter denied giving goverment keys to decipher messages. It goes
without saying that it&amp;#39;s creepy but among other things Roskomnadzor blocked like
roughly 18kk of IP addresses. It happened because Telegram uses services
publicly provided by AWS and other big companies. Here I should say that&amp;#39;s
exactly the reason these companies exist lol they provide services. Roskomnadzor
started to block these IPs and Telegram as it&amp;#39;s an application using push
notifications (correct me if I&amp;#39;m wrong) started to use other IPs and so on and
so on. The post is not about how secure Telegram is or why it doesn&amp;#39;t provide
secure E2E channels by default. It&amp;#39;s about not giving up freedom to talk to each
other privately.&lt;/p&gt;

&lt;p&gt;As usually this morning I tried to connect to one of our web services and
surprise what? It timed out. ICMP traffic wasn&amp;#39;t blocked though. Let&amp;#39;s say a
domain for this server for simplification is &lt;code&gt;a.com&lt;/code&gt;.&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ping a.com
PING 159.89.184.10: 64 data bytes
72 bytes from 159.89.184.10: &lt;span class="nv"&gt;seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0 &lt;span class="nv"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;52 &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;141.242 ms
72 bytes from 159.89.184.10: &lt;span class="nv"&gt;seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1 &lt;span class="nv"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;52 &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;140.809 ms
72 bytes from 159.89.184.10: &lt;span class="nv"&gt;seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;2 &lt;span class="nv"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;52 &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;141.031 ms
72 bytes from 159.89.184.10: &lt;span class="nv"&gt;seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;3 &lt;span class="nv"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;52 &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;140.702 ms
72 bytes from 159.89.184.10: &lt;span class="nv"&gt;seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;4 &lt;span class="nv"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;52 &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;140.808 ms

5 packets transmitted, 5 packets received, 0% packet loss
round-trip min/avg/max &lt;span class="o"&gt;=&lt;/span&gt; 140.702/140.918/141.242 ms
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;You would say so what? I&amp;#39;ll tell you that for example if I want to open torrent
tracker &lt;a href="http://rutracker.org"&gt;rutracker.org&lt;/a&gt; (which has been blocked for years
in Russia) ISP redirects me to its &lt;a href="http://warning.rt.ru/?id=9&amp;st=0&amp;dt=195.82.146.214&amp;rs=http%3A%2F%2Frutracker.org%2Fforum%2Findex.php"&gt;own page&lt;/a&gt;
showing that this address was in fact blocked by goverment. Surprisingly it&amp;#39;s
not the case for &lt;code&gt;159.89.184.10&lt;/code&gt;. HTTP traffic disappears silently. So first
thing we go to &lt;a href="https://eais.rkn.gov.ru/"&gt;eais.rkn.gov.ru&lt;/a&gt; to check if the
address is really blocked. It says it&amp;#39;s all clear no blocks, nothing. Ok we go
to ISP (hello &lt;a href="http://rt.ru"&gt;Rostelekom&lt;/a&gt;) then.&lt;/p&gt;

&lt;p&gt;Below in this post I provide full conversations with ISP and DigitalOcean but
long story short after ISP checked everything on their end they called me
saying that they don&amp;#39;t block it as well as Roskomnadzor. So most likely it&amp;#39;s
DigitalOcean who blocks it. As you wish guys&amp;hellip; I go to DigitalOcean and
together we investigate it. Opening &lt;code&gt;chrome://net-internals&lt;/code&gt; is very intersting
sometimes and confirms time out:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mi"&gt;14057&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;URL_REQUEST&lt;/span&gt;
&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="n"&gt;Time&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2018&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt; &lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;06.009&lt;/span&gt;

&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;144674&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;REQUEST_ALIVE&lt;/span&gt;  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;24521&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
                     &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;priority&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;HIGHEST&amp;quot;&lt;/span&gt;
                     &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;https://a.com/&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;144674&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;    &lt;span class="n"&gt;URL_REQUEST_DELEGATE&lt;/span&gt;  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;144674&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;   &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;URL_REQUEST_START_JOB&lt;/span&gt;  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;24521&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
                       &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;load_flags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4353&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MAIN_FRAME_DEPRECATED&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;VALIDATE_CACHE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;VERIFY_EV_CERT&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
                       &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;
                       &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;https://a.com/&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;144674&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;      &lt;span class="n"&gt;URL_REQUEST_DELEGATE&lt;/span&gt;  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;144674&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;      &lt;span class="n"&gt;HTTP_CACHE_GET_BACKEND&lt;/span&gt;  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;144674&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;      &lt;span class="n"&gt;HTTP_CACHE_OPEN_ENTRY&lt;/span&gt;  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
                         &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;net_error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ERR_FAILED&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;144674&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;      &lt;span class="n"&gt;HTTP_CACHE_CREATE_ENTRY&lt;/span&gt;  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;144674&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;      &lt;span class="n"&gt;HTTP_CACHE_ADD_TO_ENTRY&lt;/span&gt;  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;144675&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;HTTP_STREAM_REQUEST&lt;/span&gt;  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;24520&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;144675&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;        &lt;span class="n"&gt;HTTP_STREAM_JOB_CONTROLLER_BOUND&lt;/span&gt;
                           &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;source_dependency&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;14060&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HTTP_STREAM_JOB_CONTROLLER&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;169195&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;24521&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;        &lt;span class="n"&gt;HTTP_STREAM_REQUEST_BOUND_TO_JOB&lt;/span&gt;
                           &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;source_dependency&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;14061&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HTTP_STREAM_JOB&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;169195&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;24521&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;     &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;HTTP_STREAM_REQUEST&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;169195&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;24521&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;   &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;URL_REQUEST_START_JOB&lt;/span&gt;
                       &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;net_error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;118&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ERR_CONNECTION_TIMED_OUT&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;169195&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;24521&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;    &lt;span class="n"&gt;URL_REQUEST_DELEGATE&lt;/span&gt;  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;169195&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;24521&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;REQUEST_ALIVE&lt;/span&gt;
                     &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;net_error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;118&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ERR_CONNECTION_TIMED_OUT&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Traceroute from my machine to this IP shows a few intermidiate backbone providers:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;traceroute to a.com &lt;span class="o"&gt;(&lt;/span&gt;159.89.184.10&lt;span class="o"&gt;)&lt;/span&gt;, 30 hops max, 60 byte packets
 1  gateway &lt;span class="o"&gt;(&lt;/span&gt;192.168.0.1&lt;span class="o"&gt;)&lt;/span&gt;  0.417 ms  0.484 ms  0.568 ms
 2  100.103.0.1 &lt;span class="o"&gt;(&lt;/span&gt;100.103.0.1&lt;span class="o"&gt;)&lt;/span&gt;  4.935 ms  4.992 ms  5.020 ms
 3  213.59.232.208 &lt;span class="o"&gt;(&lt;/span&gt;213.59.232.208&lt;span class="o"&gt;)&lt;/span&gt;  38.910 ms 213.59.232.204 &lt;span class="o"&gt;(&lt;/span&gt;213.59.232.204&lt;span class="o"&gt;)&lt;/span&gt;  5.076 ms 213.59.232.208 &lt;span class="o"&gt;(&lt;/span&gt;213.59.232.208&lt;span class="o"&gt;)&lt;/span&gt;  5.339 ms
 4  87.226.146.65 &lt;span class="o"&gt;(&lt;/span&gt;87.226.146.65&lt;span class="o"&gt;)&lt;/span&gt;  6.112 ms 87.226.146.63 &lt;span class="o"&gt;(&lt;/span&gt;87.226.146.63&lt;span class="o"&gt;)&lt;/span&gt;  6.889 ms  6.970 ms
 5  87.226.146.58 &lt;span class="o"&gt;(&lt;/span&gt;87.226.146.58&lt;span class="o"&gt;)&lt;/span&gt;  20.707 ms  20.892 ms  20.702 ms
 6  213.59.212.235 &lt;span class="o"&gt;(&lt;/span&gt;213.59.212.235&lt;span class="o"&gt;)&lt;/span&gt;  20.632 ms  16.806 ms  17.437 ms
 7  rostelecom.demarc.cogentco.com &lt;span class="o"&gt;(&lt;/span&gt;149.11.20.138&lt;span class="o"&gt;)&lt;/span&gt;  63.077 ms  63.722 ms  64.571 ms
 8  hu0-1-0-4.rcr22.fra06.atlas.cogentco.com &lt;span class="o"&gt;(&lt;/span&gt;149.11.20.137&lt;span class="o"&gt;)&lt;/span&gt;  57.615 ms  58.457 ms  58.454 ms
 9  be2845.ccr41.fra03.atlas.cogentco.com &lt;span class="o"&gt;(&lt;/span&gt;154.54.56.189&lt;span class="o"&gt;)&lt;/span&gt;  58.463 ms be2846.ccr42.fra03.atlas.cogentco.com &lt;span class="o"&gt;(&lt;/span&gt;154.54.37.29&lt;span class="o"&gt;)&lt;/span&gt;  66.791 ms be2845.ccr41.fra03.atlas.cogentco.com &lt;span class="o"&gt;(&lt;/span&gt;154.54.56.189&lt;span class="o"&gt;)&lt;/span&gt;  59.662 ms
10  be3187.agr41.fra03.atlas.cogentco.com &lt;span class="o"&gt;(&lt;/span&gt;130.117.1.117&lt;span class="o"&gt;)&lt;/span&gt;  63.433 ms be3186.agr41.fra03.atlas.cogentco.com &lt;span class="o"&gt;(&lt;/span&gt;130.117.0.2&lt;span class="o"&gt;)&lt;/span&gt;  64.132 ms be3187.agr41.fra03.atlas.cogentco.com &lt;span class="o"&gt;(&lt;/span&gt;130.117.1.117&lt;span class="o"&gt;)&lt;/span&gt;  63.998 ms
11  telia.fra03.atlas.cogentco.com &lt;span class="o"&gt;(&lt;/span&gt;130.117.14.198&lt;span class="o"&gt;)&lt;/span&gt;  70.302 ms  70.477 ms  70.480 ms
12  ffm-bb3-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.133.34&lt;span class="o"&gt;)&lt;/span&gt;  168.162 ms ffm-bb4-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.125.218&lt;span class="o"&gt;)&lt;/span&gt;  140.360 ms ffm-bb3-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.120.3&lt;span class="o"&gt;)&lt;/span&gt;  165.617 ms
13  prs-bb3-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.123.13&lt;span class="o"&gt;)&lt;/span&gt;  171.186 ms  171.374 ms  169.994 ms
14  nyk-bb3-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;213.155.135.5&lt;span class="o"&gt;)&lt;/span&gt;  164.382 ms nyk-bb4-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;80.91.251.100&lt;span class="o"&gt;)&lt;/span&gt;  149.359 ms  150.275 ms
15  nyk-b3-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.140.223&lt;span class="o"&gt;)&lt;/span&gt;  163.973 ms hbg-bb1-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;80.91.249.11&lt;span class="o"&gt;)&lt;/span&gt;  177.416 ms  177.405 ms
16  digitalocean-ic-306498-nyk-b3.c.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.45.10&lt;span class="o"&gt;)&lt;/span&gt;  145.430 ms  145.572 ms  158.371 ms
17  * * *
18  159.89.184.10 &lt;span class="o"&gt;(&lt;/span&gt;159.89.184.10&lt;span class="o"&gt;)&lt;/span&gt;  154.054 ms  140.789 ms  141.688 ms
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;While in reverse from the droplet there&amp;#39;s only one of them:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;traceroute to 95.32.215.86 &lt;span class="o"&gt;(&lt;/span&gt;95.32.215.86&lt;span class="o"&gt;)&lt;/span&gt;, 30 hops max, 60 byte packets
 1  159.89.176.253 &lt;span class="o"&gt;(&lt;/span&gt;159.89.176.253&lt;span class="o"&gt;)&lt;/span&gt;  0.290 ms  0.263 ms  0.231 ms
 2  138.197.248.28 &lt;span class="o"&gt;(&lt;/span&gt;138.197.248.28&lt;span class="o"&gt;)&lt;/span&gt;  0.478 ms  0.469 ms  0.456 ms
 3  nyk-b3-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.45.9&lt;span class="o"&gt;)&lt;/span&gt;  1.021 ms  1.058 ms  1.043 ms
 4  nyk-bb3-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.140.222&lt;span class="o"&gt;)&lt;/span&gt;  1.153 ms nyk-bb4-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.139.150&lt;span class="o"&gt;)&lt;/span&gt;  1.523 ms nyk-bb3-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.140.222&lt;span class="o"&gt;)&lt;/span&gt;  1.111 ms
 5  prs-bb4-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;80.91.251.101&lt;span class="o"&gt;)&lt;/span&gt;  71.869 ms prs-bb3-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;213.155.135.4&lt;span class="o"&gt;)&lt;/span&gt;  106.781 ms  107.322 ms
 6  prs-bb3-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.134.92&lt;span class="o"&gt;)&lt;/span&gt;  88.216 ms  88.162 ms ffm-bb4-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.122.139&lt;span class="o"&gt;)&lt;/span&gt;  81.890 ms
 7  ffm-b1-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.141.237&lt;span class="o"&gt;)&lt;/span&gt;  93.304 ms ffm-bb3-link.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.123.12&lt;span class="o"&gt;)&lt;/span&gt;  101.734 ms  102.168 ms
 8  rostelecom-ic-319651-ffm-b1.c.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.151.97&lt;span class="o"&gt;)&lt;/span&gt;  156.199 ms  156.187 ms  156.198 ms
 9  213.59.212.103 &lt;span class="o"&gt;(&lt;/span&gt;213.59.212.103&lt;span class="o"&gt;)&lt;/span&gt;  138.304 ms  149.985 ms rostelecom-ic-319651-ffm-b1.c.telia.net &lt;span class="o"&gt;(&lt;/span&gt;62.115.151.97&lt;span class="o"&gt;)&lt;/span&gt;  158.270 ms
10  86.215.32.95.dsl-dynamic.vsi.ru &lt;span class="o"&gt;(&lt;/span&gt;95.32.215.86&lt;span class="o"&gt;)&lt;/span&gt;  139.571 ms  139.690 ms  139.701 ms
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;BGP might have an answer why the route changes. I found pretty interesting site
BTW &lt;a href="https://bgpstream.com/"&gt;bgpstream.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s monitor outgoing and incoming traffic:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;$ &lt;span class="n"&gt;curl&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;span class="n"&gt;curl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;7&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Failed&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;connect&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; 80&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;timed&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt;

$ &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;tcpdump&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;vvv&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt; &lt;span class="n"&gt;enp4s0&lt;/span&gt; &lt;span class="n"&gt;dst&lt;/span&gt; 159&lt;span class="p"&gt;.&lt;/span&gt;89&lt;span class="p"&gt;.&lt;/span&gt;184&lt;span class="p"&gt;.&lt;/span&gt;10 &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt; 159&lt;span class="p"&gt;.&lt;/span&gt;89&lt;span class="p"&gt;.&lt;/span&gt;184&lt;span class="p"&gt;.&lt;/span&gt;10
&lt;span class="n"&gt;tcpdump&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;listening&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;enp4s0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;EN10MB&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Ethernet&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;capture&lt;/span&gt; &lt;span class="nb"&gt;size&lt;/span&gt; 262144 &lt;span class="n"&gt;bytes&lt;/span&gt;
23&lt;span class="p"&gt;:&lt;/span&gt;38&lt;span class="p"&gt;:&lt;/span&gt;18&lt;span class="p"&gt;.&lt;/span&gt;908971 &lt;span class="n"&gt;IP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tos&lt;/span&gt; 0&lt;span class="n"&gt;x0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt; 64&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; 59563&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;DF&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;proto&lt;/span&gt; &lt;span class="n"&gt;TCP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;6&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 60&lt;span class="p"&gt;)&lt;/span&gt;
    192&lt;span class="p"&gt;.&lt;/span&gt;168&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;13&lt;span class="p"&gt;.&lt;/span&gt;41722 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 159&lt;span class="p"&gt;.&lt;/span&gt;89&lt;span class="p"&gt;.&lt;/span&gt;184&lt;span class="p"&gt;.&lt;/span&gt;10&lt;span class="p"&gt;.&lt;/span&gt;80&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;cksum&lt;/span&gt; 0&lt;span class="n"&gt;xd52f&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;correct&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt; 1092877667&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;win&lt;/span&gt; 29200&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mss&lt;/span&gt; 1460&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;sackOK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;TS&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt; 3908771289 &lt;span class="n"&gt;ecr&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;wscale&lt;/span&gt; 7&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 0
23&lt;span class="p"&gt;:&lt;/span&gt;38&lt;span class="p"&gt;:&lt;/span&gt;18&lt;span class="p"&gt;.&lt;/span&gt;925014 &lt;span class="n"&gt;IP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tos&lt;/span&gt; 0&lt;span class="n"&gt;x0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt; 58&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; 1&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;none&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;proto&lt;/span&gt; &lt;span class="n"&gt;TCP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;6&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 40&lt;span class="p"&gt;)&lt;/span&gt;
    159&lt;span class="p"&gt;.&lt;/span&gt;89&lt;span class="p"&gt;.&lt;/span&gt;184&lt;span class="p"&gt;.&lt;/span&gt;10&lt;span class="p"&gt;.&lt;/span&gt;80 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 192&lt;span class="p"&gt;.&lt;/span&gt;168&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;13&lt;span class="p"&gt;.&lt;/span&gt;41722&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;cksum&lt;/span&gt; 0&lt;span class="n"&gt;x43e5&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;correct&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;win&lt;/span&gt; 29200&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 0
23&lt;span class="p"&gt;:&lt;/span&gt;38&lt;span class="p"&gt;:&lt;/span&gt;19&lt;span class="p"&gt;.&lt;/span&gt;932815 &lt;span class="n"&gt;IP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tos&lt;/span&gt; 0&lt;span class="n"&gt;x0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt; 64&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; 59564&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;DF&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;proto&lt;/span&gt; &lt;span class="n"&gt;TCP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;6&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 60&lt;span class="p"&gt;)&lt;/span&gt;
    192&lt;span class="p"&gt;.&lt;/span&gt;168&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;13&lt;span class="p"&gt;.&lt;/span&gt;41722 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 159&lt;span class="p"&gt;.&lt;/span&gt;89&lt;span class="p"&gt;.&lt;/span&gt;184&lt;span class="p"&gt;.&lt;/span&gt;10&lt;span class="p"&gt;.&lt;/span&gt;80&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;cksum&lt;/span&gt; 0&lt;span class="n"&gt;xd12f&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;correct&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt; 1092877667&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;win&lt;/span&gt; 29200&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mss&lt;/span&gt; 1460&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;sackOK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;TS&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt; 3908772313 &lt;span class="n"&gt;ecr&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;wscale&lt;/span&gt; 7&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 0
23&lt;span class="p"&gt;:&lt;/span&gt;38&lt;span class="p"&gt;:&lt;/span&gt;19&lt;span class="p"&gt;.&lt;/span&gt;948956 &lt;span class="n"&gt;IP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tos&lt;/span&gt; 0&lt;span class="n"&gt;x0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt; 58&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; 1&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;none&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;proto&lt;/span&gt; &lt;span class="n"&gt;TCP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;6&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 40&lt;span class="p"&gt;)&lt;/span&gt;
    159&lt;span class="p"&gt;.&lt;/span&gt;89&lt;span class="p"&gt;.&lt;/span&gt;184&lt;span class="p"&gt;.&lt;/span&gt;10&lt;span class="p"&gt;.&lt;/span&gt;80 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 192&lt;span class="p"&gt;.&lt;/span&gt;168&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;13&lt;span class="p"&gt;.&lt;/span&gt;41722&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;cksum&lt;/span&gt; 0&lt;span class="n"&gt;x43e5&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;correct&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;win&lt;/span&gt; 29200&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 0
23&lt;span class="p"&gt;:&lt;/span&gt;38&lt;span class="p"&gt;:&lt;/span&gt;21&lt;span class="p"&gt;.&lt;/span&gt;948826 &lt;span class="n"&gt;IP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tos&lt;/span&gt; 0&lt;span class="n"&gt;x0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt; 64&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; 59565&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;DF&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;proto&lt;/span&gt; &lt;span class="n"&gt;TCP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;6&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 60&lt;span class="p"&gt;)&lt;/span&gt;
    192&lt;span class="p"&gt;.&lt;/span&gt;168&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;13&lt;span class="p"&gt;.&lt;/span&gt;41722 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 159&lt;span class="p"&gt;.&lt;/span&gt;89&lt;span class="p"&gt;.&lt;/span&gt;184&lt;span class="p"&gt;.&lt;/span&gt;10&lt;span class="p"&gt;.&lt;/span&gt;80&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;cksum&lt;/span&gt; 0&lt;span class="n"&gt;xc94f&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;correct&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt; 1092877667&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;win&lt;/span&gt; 29200&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mss&lt;/span&gt; 1460&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;sackOK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;TS&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt; 3908774329 &lt;span class="n"&gt;ecr&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;wscale&lt;/span&gt; 7&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 0
23&lt;span class="p"&gt;:&lt;/span&gt;38&lt;span class="p"&gt;:&lt;/span&gt;21&lt;span class="p"&gt;.&lt;/span&gt;965036 &lt;span class="n"&gt;IP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tos&lt;/span&gt; 0&lt;span class="n"&gt;x0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt; 58&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; 1&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;none&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;proto&lt;/span&gt; &lt;span class="n"&gt;TCP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;6&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 40&lt;span class="p"&gt;)&lt;/span&gt;
    159&lt;span class="p"&gt;.&lt;/span&gt;89&lt;span class="p"&gt;.&lt;/span&gt;184&lt;span class="p"&gt;.&lt;/span&gt;10&lt;span class="p"&gt;.&lt;/span&gt;80 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 192&lt;span class="p"&gt;.&lt;/span&gt;168&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;13&lt;span class="p"&gt;.&lt;/span&gt;41722&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;cksum&lt;/span&gt; 0&lt;span class="n"&gt;x43e5&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;correct&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;win&lt;/span&gt; 29200&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 0
23&lt;span class="p"&gt;:&lt;/span&gt;38&lt;span class="p"&gt;:&lt;/span&gt;26&lt;span class="p"&gt;.&lt;/span&gt;044817 &lt;span class="n"&gt;IP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tos&lt;/span&gt; 0&lt;span class="n"&gt;x0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt; 64&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; 59566&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;DF&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;proto&lt;/span&gt; &lt;span class="n"&gt;TCP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;6&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 60&lt;span class="p"&gt;)&lt;/span&gt;
    192&lt;span class="p"&gt;.&lt;/span&gt;168&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;13&lt;span class="p"&gt;.&lt;/span&gt;41722 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 159&lt;span class="p"&gt;.&lt;/span&gt;89&lt;span class="p"&gt;.&lt;/span&gt;184&lt;span class="p"&gt;.&lt;/span&gt;10&lt;span class="p"&gt;.&lt;/span&gt;80&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;cksum&lt;/span&gt; 0&lt;span class="n"&gt;xb94f&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;correct&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt; 1092877667&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;win&lt;/span&gt; 29200&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mss&lt;/span&gt; 1460&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;sackOK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;TS&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt; 3908778425 &lt;span class="n"&gt;ecr&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;wscale&lt;/span&gt; 7&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 0
23&lt;span class="p"&gt;:&lt;/span&gt;38&lt;span class="p"&gt;:&lt;/span&gt;26&lt;span class="p"&gt;.&lt;/span&gt;061047 &lt;span class="n"&gt;IP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tos&lt;/span&gt; 0&lt;span class="n"&gt;x0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt; 58&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; 1&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;none&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;proto&lt;/span&gt; &lt;span class="n"&gt;TCP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;6&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 40&lt;span class="p"&gt;)&lt;/span&gt;
    159&lt;span class="p"&gt;.&lt;/span&gt;89&lt;span class="p"&gt;.&lt;/span&gt;184&lt;span class="p"&gt;.&lt;/span&gt;10&lt;span class="p"&gt;.&lt;/span&gt;80 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 192&lt;span class="p"&gt;.&lt;/span&gt;168&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;13&lt;span class="p"&gt;.&lt;/span&gt;41722&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;cksum&lt;/span&gt; 0&lt;span class="n"&gt;x43e5&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;correct&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;win&lt;/span&gt; 29200&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 0
23&lt;span class="p"&gt;:&lt;/span&gt;38&lt;span class="p"&gt;:&lt;/span&gt;34&lt;span class="p"&gt;.&lt;/span&gt;236838 &lt;span class="n"&gt;IP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tos&lt;/span&gt; 0&lt;span class="n"&gt;x0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt; 64&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; 59567&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;DF&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;proto&lt;/span&gt; &lt;span class="n"&gt;TCP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;6&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 60&lt;span class="p"&gt;)&lt;/span&gt;
    192&lt;span class="p"&gt;.&lt;/span&gt;168&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;13&lt;span class="p"&gt;.&lt;/span&gt;41722 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 159&lt;span class="p"&gt;.&lt;/span&gt;89&lt;span class="p"&gt;.&lt;/span&gt;184&lt;span class="p"&gt;.&lt;/span&gt;10&lt;span class="p"&gt;.&lt;/span&gt;80&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;cksum&lt;/span&gt; 0&lt;span class="n"&gt;x994f&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;correct&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt; 1092877667&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;win&lt;/span&gt; 29200&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mss&lt;/span&gt; 1460&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;sackOK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;TS&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt; 3908786617 &lt;span class="n"&gt;ecr&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;wscale&lt;/span&gt; 7&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 0
23&lt;span class="p"&gt;:&lt;/span&gt;38&lt;span class="p"&gt;:&lt;/span&gt;34&lt;span class="p"&gt;.&lt;/span&gt;252685 &lt;span class="n"&gt;IP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tos&lt;/span&gt; 0&lt;span class="n"&gt;x0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt; 58&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; 1&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;none&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;proto&lt;/span&gt; &lt;span class="n"&gt;TCP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;6&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 40&lt;span class="p"&gt;)&lt;/span&gt;
    159&lt;span class="p"&gt;.&lt;/span&gt;89&lt;span class="p"&gt;.&lt;/span&gt;184&lt;span class="p"&gt;.&lt;/span&gt;10&lt;span class="p"&gt;.&lt;/span&gt;80 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 192&lt;span class="p"&gt;.&lt;/span&gt;168&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;13&lt;span class="p"&gt;.&lt;/span&gt;41722&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;cksum&lt;/span&gt; 0&lt;span class="n"&gt;x43e5&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;correct&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;win&lt;/span&gt; 29200&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 0
23&lt;span class="p"&gt;:&lt;/span&gt;38&lt;span class="p"&gt;:&lt;/span&gt;50&lt;span class="p"&gt;.&lt;/span&gt;364856 &lt;span class="n"&gt;IP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tos&lt;/span&gt; 0&lt;span class="n"&gt;x0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt; 64&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; 59568&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;DF&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;proto&lt;/span&gt; &lt;span class="n"&gt;TCP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;6&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 60&lt;span class="p"&gt;)&lt;/span&gt;
    192&lt;span class="p"&gt;.&lt;/span&gt;168&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;13&lt;span class="p"&gt;.&lt;/span&gt;41722 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 159&lt;span class="p"&gt;.&lt;/span&gt;89&lt;span class="p"&gt;.&lt;/span&gt;184&lt;span class="p"&gt;.&lt;/span&gt;10&lt;span class="p"&gt;.&lt;/span&gt;80&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;cksum&lt;/span&gt; 0&lt;span class="n"&gt;x5a4e&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;correct&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt; 1092877667&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;win&lt;/span&gt; 29200&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mss&lt;/span&gt; 1460&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;sackOK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;TS&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt; 3908802746 &lt;span class="n"&gt;ecr&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;wscale&lt;/span&gt; 7&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 0
23&lt;span class="p"&gt;:&lt;/span&gt;38&lt;span class="p"&gt;:&lt;/span&gt;50&lt;span class="p"&gt;.&lt;/span&gt;381002 &lt;span class="n"&gt;IP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tos&lt;/span&gt; 0&lt;span class="n"&gt;x0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt; 58&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; 1&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;none&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;proto&lt;/span&gt; &lt;span class="n"&gt;TCP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;6&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 40&lt;span class="p"&gt;)&lt;/span&gt;
    159&lt;span class="p"&gt;.&lt;/span&gt;89&lt;span class="p"&gt;.&lt;/span&gt;184&lt;span class="p"&gt;.&lt;/span&gt;10&lt;span class="p"&gt;.&lt;/span&gt;80 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 192&lt;span class="p"&gt;.&lt;/span&gt;168&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;13&lt;span class="p"&gt;.&lt;/span&gt;41722&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;cksum&lt;/span&gt; 0&lt;span class="n"&gt;x43e5&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;correct&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;win&lt;/span&gt; 29200&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 0
23&lt;span class="p"&gt;:&lt;/span&gt;39&lt;span class="p"&gt;:&lt;/span&gt;22&lt;span class="p"&gt;.&lt;/span&gt;620807 &lt;span class="n"&gt;IP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tos&lt;/span&gt; 0&lt;span class="n"&gt;x0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt; 64&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; 59569&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;DF&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;proto&lt;/span&gt; &lt;span class="n"&gt;TCP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;6&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 60&lt;span class="p"&gt;)&lt;/span&gt;
    192&lt;span class="p"&gt;.&lt;/span&gt;168&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;13&lt;span class="p"&gt;.&lt;/span&gt;41722 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 159&lt;span class="p"&gt;.&lt;/span&gt;89&lt;span class="p"&gt;.&lt;/span&gt;184&lt;span class="p"&gt;.&lt;/span&gt;10&lt;span class="p"&gt;.&lt;/span&gt;80&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;cksum&lt;/span&gt; 0&lt;span class="n"&gt;xdc4d&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;correct&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt; 1092877667&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;win&lt;/span&gt; 29200&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mss&lt;/span&gt; 1460&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;sackOK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;TS&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt; 3908835002 &lt;span class="n"&gt;ecr&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;wscale&lt;/span&gt; 7&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 0
23&lt;span class="p"&gt;:&lt;/span&gt;39&lt;span class="p"&gt;:&lt;/span&gt;22&lt;span class="p"&gt;.&lt;/span&gt;637077 &lt;span class="n"&gt;IP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tos&lt;/span&gt; 0&lt;span class="n"&gt;x0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt; 58&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; 1&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;none&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;proto&lt;/span&gt; &lt;span class="n"&gt;TCP&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;6&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 40&lt;span class="p"&gt;)&lt;/span&gt;
    159&lt;span class="p"&gt;.&lt;/span&gt;89&lt;span class="p"&gt;.&lt;/span&gt;184&lt;span class="p"&gt;.&lt;/span&gt;10&lt;span class="p"&gt;.&lt;/span&gt;80 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 192&lt;span class="p"&gt;.&lt;/span&gt;168&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;13&lt;span class="p"&gt;.&lt;/span&gt;41722&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Flags&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;cksum&lt;/span&gt; 0&lt;span class="n"&gt;x43e5&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;correct&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;win&lt;/span&gt; 29200&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; 0
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Goodbye 3-Way TCP Handshake which should be (SYN, SYN-ACK, ACK) and hello RST
after SYN. You can see them as [S] and [R] flags. In other words all outgoing
http traffic dropped in the middle. Does it mean Roskomnadzor no longer needs
ISP to handle this crap or ISP is lying? If a girl says who blocks servers
a man will feed her.&lt;/p&gt;

&lt;p&gt;&lt;img alt="The girl is no one" src="https://pbs.twimg.com/media/DbhrAF_WAAAE80q.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s try it other way around. I set port mapping on my router to give an
ability for incoming http request go behind it and reach Ngnix on my PC.&lt;/p&gt;

&lt;p&gt;We ssh into the droplet and try to connect with curl:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl http://95.32.183.155
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;title&amp;gt;Welcome to nginx!&amp;lt;/title&amp;gt;
&amp;lt;style&amp;gt;
    body &lt;span class="o"&gt;{&lt;/span&gt;
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    &lt;span class="o"&gt;}&lt;/span&gt;
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Welcome to nginx!&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;For online documentation and support please refer to
&amp;lt;a &lt;span class="nv"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://nginx.org/&amp;quot;&lt;/span&gt;&amp;gt;nginx.org&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;
Commercial support is available at
&amp;lt;a &lt;span class="nv"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://nginx.com/&amp;quot;&lt;/span&gt;&amp;gt;nginx.com&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;Thank you &lt;span class="k"&gt;for &lt;/span&gt;using nginx.&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

&lt;span class="nv"&gt;$ &lt;/span&gt;sudo tcpdump -nn -vvv -i eth0 dst 95.32.183.155 and dst port 80 or src 95.32.183.155 and dst port 80
05:40:20.044097 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 14142, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF&lt;span class="o"&gt;]&lt;/span&gt;, proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 60&lt;span class="o"&gt;)&lt;/span&gt;
    159.89.184.10.55928 &amp;gt; 95.32.183.155.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;S&lt;span class="o"&gt;]&lt;/span&gt;, cksum 0x6e4e &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0x2b0c&lt;span class="o"&gt;)&lt;/span&gt;, seq 1395059192, win 29200, options &lt;span class="o"&gt;[&lt;/span&gt;mss 1460,sackOK,TS val 1175838406 ecr 0,nop,wscale 7&lt;span class="o"&gt;]&lt;/span&gt;, length 0
05:40:20.196601 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 14143, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF&lt;span class="o"&gt;]&lt;/span&gt;, proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 52&lt;span class="o"&gt;)&lt;/span&gt;
    159.89.184.10.55928 &amp;gt; 95.32.183.155.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;.&lt;span class="o"&gt;]&lt;/span&gt;, cksum 0x6e46 &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0xd836&lt;span class="o"&gt;)&lt;/span&gt;, seq 1395059193, ack 1061805333, win 229, options &lt;span class="o"&gt;[&lt;/span&gt;nop,nop,TS val 1175838444 ecr 3637509479&lt;span class="o"&gt;]&lt;/span&gt;, length 0
05:40:20.196784 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 14144, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF&lt;span class="o"&gt;]&lt;/span&gt;, proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 129&lt;span class="o"&gt;)&lt;/span&gt;
    159.89.184.10.55928 &amp;gt; 95.32.183.155.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;P.&lt;span class="o"&gt;]&lt;/span&gt;, cksum 0x6e93 &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0x40c3&lt;span class="o"&gt;)&lt;/span&gt;, seq 0:77, ack 1, win 229, options &lt;span class="o"&gt;[&lt;/span&gt;nop,nop,TS val 1175838445 ecr 3637509479&lt;span class="o"&gt;]&lt;/span&gt;, length 77: HTTP, length: 77
    GET / HTTP/1.1
    Host: 95.32.183.155
    User-Agent: curl/7.47.0
    Accept: */*

05:40:20.350596 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 14145, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF&lt;span class="o"&gt;]&lt;/span&gt;, proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 52&lt;span class="o"&gt;)&lt;/span&gt;
    159.89.184.10.55928 &amp;gt; 95.32.183.155.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;.&lt;span class="o"&gt;]&lt;/span&gt;, cksum 0x6e46 &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0xd3c1&lt;span class="o"&gt;)&lt;/span&gt;, seq 77, ack 860, win 242, options &lt;span class="o"&gt;[&lt;/span&gt;nop,nop,TS val 1175838483 ecr 3637509632&lt;span class="o"&gt;]&lt;/span&gt;, length 0
05:40:20.350809 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 14146, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF&lt;span class="o"&gt;]&lt;/span&gt;, proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 52&lt;span class="o"&gt;)&lt;/span&gt;
    159.89.184.10.55928 &amp;gt; 95.32.183.155.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;F.&lt;span class="o"&gt;]&lt;/span&gt;, cksum 0x6e46 &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0xd3c0&lt;span class="o"&gt;)&lt;/span&gt;, seq 77, ack 860, win 242, options &lt;span class="o"&gt;[&lt;/span&gt;nop,nop,TS val 1175838483 ecr 3637509632&lt;span class="o"&gt;]&lt;/span&gt;, length 0
05:40:20.503792 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 14147, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF&lt;span class="o"&gt;]&lt;/span&gt;, proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 52&lt;span class="o"&gt;)&lt;/span&gt;
    159.89.184.10.55928 &amp;gt; 95.32.183.155.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;.&lt;span class="o"&gt;]&lt;/span&gt;, cksum 0x6e46 &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0xd2ff&lt;span class="o"&gt;)&lt;/span&gt;, seq 78, ack 861, win 242, options &lt;span class="o"&gt;[&lt;/span&gt;nop,nop,TS val 1175838521 ecr 3637509786&lt;span class="o"&gt;]&lt;/span&gt;, length 0
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;It works. Let&amp;#39;s send an outdoing packet from the droplet with source port 80:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;yes | nc -p 80 -t 95.32.183.155 80

&lt;span class="nv"&gt;$ &lt;/span&gt;sudo tcpdump -nn -vvv -i eth0 dst 95.32.183.155 and dst port 80 or src 95.32.183.155 and dst port 80
tcpdump: listening on eth0, link-type EN10MB &lt;span class="o"&gt;(&lt;/span&gt;Ethernet&lt;span class="o"&gt;)&lt;/span&gt;, capture size 262144 bytes
05:39:49.968049 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 18207, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF&lt;span class="o"&gt;]&lt;/span&gt;, proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 60&lt;span class="o"&gt;)&lt;/span&gt;
    159.89.184.10.80 &amp;gt; 95.32.183.155.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;S&lt;span class="o"&gt;]&lt;/span&gt;, cksum 0x6e4e &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0x16e9&lt;span class="o"&gt;)&lt;/span&gt;, seq 3260122744, win 29200, options &lt;span class="o"&gt;[&lt;/span&gt;mss 1460,sackOK,TS val 1175830887 ecr 0,nop,wscale 7&lt;span class="o"&gt;]&lt;/span&gt;, length 0
05:39:50.109076 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x28, ttl 49, id 0, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF&lt;span class="o"&gt;]&lt;/span&gt;, proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 60&lt;span class="o"&gt;)&lt;/span&gt;
    95.32.183.155.80 &amp;gt; 159.89.184.10.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;S.&lt;span class="o"&gt;]&lt;/span&gt;, cksum 0x83e9 &lt;span class="o"&gt;(&lt;/span&gt;correct&lt;span class="o"&gt;)&lt;/span&gt;, seq 3723973951, ack 3260122745, win 28960, options &lt;span class="o"&gt;[&lt;/span&gt;mss 1440,sackOK,TS val 3637479403 ecr 1175830887,nop,wscale 7&lt;span class="o"&gt;]&lt;/span&gt;, length 0
05:39:50.109117 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 18208, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF&lt;span class="o"&gt;]&lt;/span&gt;, proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 52&lt;span class="o"&gt;)&lt;/span&gt;
    159.89.184.10.80 &amp;gt; 95.32.183.155.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;.&lt;span class="o"&gt;]&lt;/span&gt;, cksum 0x6e46 &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0x22b9&lt;span class="o"&gt;)&lt;/span&gt;, seq 1, ack 1, win 229, options &lt;span class="o"&gt;[&lt;/span&gt;nop,nop,TS val 1175830923 ecr 3637479403&lt;span class="o"&gt;]&lt;/span&gt;, length 0
05:39:50.109230 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 18209, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF&lt;span class="o"&gt;]&lt;/span&gt;, proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 2100&lt;span class="o"&gt;)&lt;/span&gt;
    159.89.184.10.80 &amp;gt; 95.32.183.155.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;P.&lt;span class="o"&gt;]&lt;/span&gt;, cksum 0x7646 &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0xf0cc&lt;span class="o"&gt;)&lt;/span&gt;, seq 1:2049, ack 1, win 229, options &lt;span class="o"&gt;[&lt;/span&gt;nop,nop,TS val 1175830923 ecr 3637479403&lt;span class="o"&gt;]&lt;/span&gt;, length 2048: HTTP
05:39:50.109280 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 18211, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF&lt;span class="o"&gt;]&lt;/span&gt;, proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 1480&lt;span class="o"&gt;)&lt;/span&gt;
    159.89.184.10.80 &amp;gt; 95.32.183.155.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;.&lt;span class="o"&gt;]&lt;/span&gt;, cksum 0x73da &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0x7def&lt;span class="o"&gt;)&lt;/span&gt;, seq 2049:3477, ack 1, win 229, options &lt;span class="o"&gt;[&lt;/span&gt;nop,nop,TS val 1175830923 ecr 3637479403&lt;span class="o"&gt;]&lt;/span&gt;, length 1428: HTTP
05:39:50.109299 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 18212, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF&lt;span class="o"&gt;]&lt;/span&gt;, proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 1480&lt;span class="o"&gt;)&lt;/span&gt;
    159.89.184.10.80 &amp;gt; 95.32.183.155.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;.&lt;span class="o"&gt;]&lt;/span&gt;, cksum 0x73da &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0x785b&lt;span class="o"&gt;)&lt;/span&gt;, seq 3477:4905, ack 1, win 229, options &lt;span class="o"&gt;[&lt;/span&gt;nop,nop,TS val 1175830923 ecr 3637479403&lt;span class="o"&gt;]&lt;/span&gt;, length 1428: HTTP
05:39:50.109331 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 18213, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF&lt;span class="o"&gt;]&lt;/span&gt;, proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 2908&lt;span class="o"&gt;)&lt;/span&gt;
    159.89.184.10.80 &amp;gt; 95.32.183.155.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;.&lt;span class="o"&gt;]&lt;/span&gt;, cksum 0x796e &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0xd5fd&lt;span class="o"&gt;)&lt;/span&gt;, seq 4905:7761, ack 1, win 229, options &lt;span class="o"&gt;[&lt;/span&gt;nop,nop,TS val 1175830923 ecr 3637479403&lt;span class="o"&gt;]&lt;/span&gt;, length 2856: HTTP
05:39:50.109349 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 18215, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF&lt;span class="o"&gt;]&lt;/span&gt;, proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 1480&lt;span class="o"&gt;)&lt;/span&gt;
    159.89.184.10.80 &amp;gt; 95.32.183.155.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;.&lt;span class="o"&gt;]&lt;/span&gt;, cksum 0x73da &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0x679f&lt;span class="o"&gt;)&lt;/span&gt;, seq 7761:9189, ack 1, win 229, options &lt;span class="o"&gt;[&lt;/span&gt;nop,nop,TS val 1175830923 ecr 3637479403&lt;span class="o"&gt;]&lt;/span&gt;, length 1428: HTTP
05:39:50.109371 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 18216, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF&lt;span class="o"&gt;]&lt;/span&gt;, proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 2908&lt;span class="o"&gt;)&lt;/span&gt;
    159.89.184.10.80 &amp;gt; 95.32.183.155.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;.&lt;span class="o"&gt;]&lt;/span&gt;, cksum 0x796e &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0xc541&lt;span class="o"&gt;)&lt;/span&gt;, seq 9189:12045, ack 1, win 229, options &lt;span class="o"&gt;[&lt;/span&gt;nop,nop,TS val 1175830923 ecr 3637479403&lt;span class="o"&gt;]&lt;/span&gt;, length 2856: HTTP
05:39:50.109390 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x0, ttl 64, id 18218, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF&lt;span class="o"&gt;]&lt;/span&gt;, proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 1480&lt;span class="o"&gt;)&lt;/span&gt;
    159.89.184.10.80 &amp;gt; 95.32.183.155.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;.&lt;span class="o"&gt;]&lt;/span&gt;, cksum 0x73da &lt;span class="o"&gt;(&lt;/span&gt;incorrect -&amp;gt; 0x56e3&lt;span class="o"&gt;)&lt;/span&gt;, seq 12045:13473, ack 1, win 229, options &lt;span class="o"&gt;[&lt;/span&gt;nop,nop,TS val 1175830923 ecr 3637479403&lt;span class="o"&gt;]&lt;/span&gt;, length 1428: HTTP
05:39:50.251998 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x28, ttl 49, id 34134, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF&lt;span class="o"&gt;]&lt;/span&gt;, proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 40&lt;span class="o"&gt;)&lt;/span&gt;
    95.32.183.155.80 &amp;gt; 159.89.184.10.80: Flags &lt;span class="o"&gt;[&lt;/span&gt;R&lt;span class="o"&gt;]&lt;/span&gt;, cksum 0x0de9 &lt;span class="o"&gt;(&lt;/span&gt;correct&lt;span class="o"&gt;)&lt;/span&gt;, seq 3723973952, win 0, length 0
05:39:50.252020 IP &lt;span class="o"&gt;(&lt;/span&gt;tos 0x28, ttl 49, id 34135, offset 0, flags &lt;span class="o"&gt;[&lt;/span&gt;DF&lt;span class="o"&gt;]&lt;/span&gt;, proto TCP &lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;, length 40&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;TCP handshake and reset after all. Looks weird and empty on my side. Now I
wonder if we can catch where exactly http traffic drops. With traceroute we can
see where ICMP packets go but does that mean HTTP goes the same direction and
where it drops? I don&amp;#39;t know the answer.&lt;/p&gt;

&lt;p&gt;Overall I feel disappointed. I&amp;#39;ve been googling about backbone providers and
found very interesting articles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.lookatme.ru/mag/magazine/russian-internet/207489-decentralization"&gt;about decentralization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.newyorker.com/tech/elements/the-mission-to-decentralize-the-internet"&gt;one more in english&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dyn.com/blog/could-it-happen-in-your-countr/"&gt;about Syria internet blackout&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It&amp;#39;s like Telegram opened a curtain. Internet started like a small local network
with purpose of exchanging data for research, helping humankind to solve issues
or at least doing something meaningful and get better. Instead it&amp;#39;s a place for
intertainment controlled by goverment. I&amp;#39;m very curious about who blocks what
and where.&lt;/p&gt;

&lt;p&gt;If you read until this point there&amp;#39;s a small bonus for you:
It&amp;#39;s known fact that rutracker is blocked.&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl -vvv http://rutracker.org/forum/index.php
*   Trying 195.82.146.214...
* TCP_NODELAY &lt;span class="nb"&gt;set&lt;/span&gt;
* Connected to rutracker.org &lt;span class="o"&gt;(&lt;/span&gt;195.82.146.214&lt;span class="o"&gt;)&lt;/span&gt; port 80 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="c"&gt;#0)&lt;/span&gt;
&amp;gt; GET /forum/index.php HTTP/1.1
&amp;gt; Host: rutracker.org
&amp;gt; User-Agent: curl/7.55.1
&amp;gt; Accept: */*
&amp;gt;
&amp;lt; HTTP/1.1 302 Found
&amp;lt; Connection: close
&amp;lt; Content-Length: 2
&amp;lt; Location: http://warning.rt.ru/?id&lt;span class="o"&gt;=&lt;/span&gt;9&amp;amp;st&lt;span class="o"&gt;=&lt;/span&gt;0&amp;amp;dt&lt;span class="o"&gt;=&lt;/span&gt;195.82.146.214&amp;amp;rs&lt;span class="o"&gt;=&lt;/span&gt;http%3A%2F%2Frutracker.org%2Fforum%2Findex.php
&amp;lt;
* Closing connection 0
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Run this if you have Rostelekom &lt;code&gt;(printf &amp;#39;GET /forum/index.php HTTP/1.1\r\nHost: rutracker.org\r\n\r\n&amp;#39;; sleep 1) | nc rutracker.org 80&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and you&amp;#39;ll see:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;HTTP/1.1 302 Found
Connection: close
Content-Length: 2
Location: http://warning.rt.ru/?id=9&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;st=0&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;dt=195.82.146.214&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;rs=http%3A%2F%2Frutracker.org%2Fforum%2Findex.php

OK Accept-Encoding
X-BB-ID: rto
X-Frame-Options: SAMEORIGIN

1f90
&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ru&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Windows-1251&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;description&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;���������� ������������� ���������� ������. ������� ��������� ������, ������, �����, ���������..&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;BitTorrent ������ RuTracker.org&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
...
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;They intercept traffic and replace with 302 redirect and below goes original page.
Unfortunately the story for DO is completely different because the traffic is
blocked somwhere in between.&lt;/p&gt;

&lt;p&gt;Here I should say that the reason remains unknown and I&amp;#39;ll keep you posted.&lt;/p&gt;

&lt;p&gt;Rostelekom convo:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;Вы
Добрый день, скажите почему у меня не открывается http://a.com/

Вы
Здравствуйте!
Меня зовут Игорь, мне понадобится несколько минут для подготовки ответа.
Подождите, пожалуйста.

Игорь
в листе ркн этго адреса нет

Вы
через впн из британии работает

Игорь
На данный момент доступ в интернет предоставляется в полнм объёме.
Со стороны компании данный ресурс не блокируется.

Вы
но у меня не открывается, файлы я приложил
трейсроут, выкладки из хрома, и курл висят
curl: (7) Failed to connect to a.com port 443: Connection timed out

Игорь
Ростелеком не ограничивает доступ к данному ресурсу. Если у Вас работает данный
ресурс через VPN, то ограничения не со стороны компании. Доступ к части
интернет-ресурсов может быть ограничен по решению уполномоченных органов власти.
Срок снятия ограничения пока не определен. Услуга интернет у Вас работает,
воспользуетесь другими интернет-ресурсами для получения необходимой Вам
информации.

Вы
можно тогда информацию кем ограничен доступ если не моим провайдером?

Игорь
Доступ к части интернет-ресурсов может быть ограничен по решению уполномоченных
органов власти.

Вы
кем?

Игорь
За блокировку ресурсов отвечает Роскомнадзор.

Вы
а исполняет ее провайдер я в курсе
если провайдер не блокирует мне нужна информация кто блокирует
если у вас ее нет мне нужен технический или старший специалист. спасибо

Игорь
Доступ к части интернет-ресурсов может быть ограничен по решению уполномоченных
органов власти. За блокировку ресурсов отвечает Роскомнадзор. Технические
специалисты предоставят Вам такую же информацию.

Вы
Игорь вы технический специалист?

Игорь
Информацию по Вашему вопросу я передам специалистам. Назовите, пожалуйста,
контактный номер телефона, как к Вам можно обращаться.

Вы
Спасибо
...

Игорь
Доступ к ресурсу будет проверен с нашей стороны.
По вашему обращению было создано задание № 132147087. В ближайшее время,
Ваш вопрос будет решен. При необходимости, с Вами свяжутся по контактному
номеру телефона. Пожалуйста, не отключайте оборудование от сети.
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;DigitalOcean convo:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;*Me*
As you likely aware in Russia they try to block Telegram yet hopelessly. I tried
to connect to one of our servers today without luck. The url was
http://a.com/ (159.89.184.10) and it timed out.
I contacted my provider asking why is that and the answer was they didn&amp;#39;t block
it as well as RKN (https://eais.rkn.gov.ru/). Yet this IP address is available
by ICMP and unavailable by http/https here&amp;#39;s the log _link_
This IP is available using VPN.

The conclusion was that it is DO who blocks it. May I know if this is true and
you really block it for Russian IPs? My IP was 95.32.215.86

Thanks

*They*
Thank you for your email.
I really appreciate you taking the time to raise a case with us!

We&amp;#39;re aware of a disruption in traffic from some areas in Russia to some of our
datacenters (AMS3, LON1, FRA1). It appears that traffic has been blocked at some
other point in the Internet, which is beyond our control. All circuits into
these datacenters are fully functional.

In case, your IP comes to any of those datacenters, we would recommend to
re-deploy. Again, I know this is not an ideal solution, we do apologize for the
inconvenience caused here.

*Me*
Surprisingly it&amp;#39;s in NYC3... Do you have an information where at least it&amp;#39;s
being blocked in Europe or in Russia?

*They*
Personally, we do not block any IPs and our circuits are fully working.

Would you be able to run an MTR to and fro from your location and vice-versa as
well as an MTR to the Droplet which is reachable from your end, so that we can
review both the MTRs this side.

Rest, if its blocked somewhere outside of our reach, due to the mass block of
IPs within Russia, getting a new IP would be helpful. Rest, we&amp;#39;d be happy to
review the MTR and see if there&amp;#39;s any specific hop where it is blocked.

*Me*
Yes I already added it to the log _link_

I&amp;#39;ve added a traceroute from droplet to my IP as well.

Is that enough?

I&amp;#39;m a bit confused I know that with traceroute we can see where all packets go
but how do we catch we http packets drop. I can connect to
a.com ssh easily. Only http doesn&amp;#39;t work :( Someone&amp;#39;s
dropping http packets and nobody tells it&amp;#39;s him lol :)

*They*
Hey there,
Based on the information you provided, the issue does not appear to be a
network connectivity issue (ping works and the traceroute reaches the
destination) but an issue specifically with the HTTP request timing out,
which is likely something occurring either within the droplet itself or within
your local computer or network configuration.

Does your web server (Apache or Nginx in most cases) show these connections in
the access log, and if so, does the error log contain any information that might
explain why the connections are timing out?

*Me*
I don&amp;#39;t see anything in logs on the machine when I try to connect with curl to it

*They*
Are you able to SSH into the droplet, or connect to it in any way other than HTTP?
This appears to be application or web server specific rather than a network
block but this would be a good way to confirm that.

*Me*
Yes exactly I have an access by ssh but http times out.

*They*

Very weird. Do you have any firewall running on this Droplet that may be
inadvertently blocking you via http and https? It looks like visiting your
IP prompts me to log in. Do you have something like fail2ban set up, where too
many failed login attempts would result in an IP block? Can you send me the
output of &amp;quot;ufw status&amp;quot; and &amp;quot;iptables -L&amp;quot;?

So far I&amp;#39;m thinking this is either a firewall issue on the Droplet,
or some sort of weird ISP/Russian issue where they&amp;#39;re solely blocking
HTTP/HTTPS for your IP, but I don&amp;#39;t know why they&amp;#39;d do that.

*Me*

Nothing:

ufw status
Status: inactive

iptables -L
Chain INPUT (policy ACCEPT)
target prot opt source destination

Chain FORWARD (policy ACCEPT)
target prot opt source destination

Chain OUTPUT (policy ACCEPT)
target prot opt source destination

http and https works for my IP I can reach many sites. Only weird issues with
some like this one. I contacted my ISP they said they didn&amp;#39;t block it.
I contacted RKN they said they didn&amp;#39;t either. Someone in the middle drops
https packets or smth weird is going on on DO side. I have no clue either...

*They*
This would seem to suggest that there are ISP level blocks of certain IPs and
ranges are happening. I&amp;#39;m located in the US and if I curl 159.89.156.100, I get
a 200 OK response.

There is unfortunately not much we can do about that, since we don&amp;#39;t have
control over how your ISP might manage or block traffic. I would recommend
bringing this to the attention of your ISP and seeing if they can confirm if
this is the case or not.
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Query Trail</title>
    <link rel="alternate" href="/2014/08/10/query-trail.html"/>
    <id>/2014/08/10/query-trail.html</id>
    <published>2014-08-09T20:00:00Z</published>
    <updated>2014-08-09T20:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;Recently I switched on a project with lots of legacy code. It was on Rails 2,
Rails 3 and now I&amp;#39;ve updated it to Rails 4.1. You can&amp;#39;t even imagine how much
rubbish I got rid of. But the thing I&amp;#39;d like to share with you today is
&lt;a href="https://github.com/route/query_trail"&gt;QueryTrail&lt;/a&gt;. This simple but useful gem&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;Recently I switched on a project with lots of legacy code. It was on Rails 2,
Rails 3 and now I&amp;#39;ve updated it to Rails 4.1. You can&amp;#39;t even imagine how much
rubbish I got rid of. But the thing I&amp;#39;d like to share with you today is
&lt;a href="https://github.com/route/query_trail"&gt;QueryTrail&lt;/a&gt;. This simple but useful gem
shows you the backtrace of fired queries. You have to agree that when just one
action of your controller sends hundreds sql requests from helpers, templates
and so forth, it&amp;#39;s definitely hard to locate the place for specific query. But
not for now:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="n"&gt;Load&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;4&lt;span class="n"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="n"&gt;SELECT&lt;/span&gt;  `&lt;span class="n"&gt;users&lt;/span&gt;`&lt;span class="o"&gt;.*&lt;/span&gt; &lt;span class="n"&gt;FROM&lt;/span&gt; `&lt;span class="n"&gt;users&lt;/span&gt;`  &lt;span class="n"&gt;WHERE&lt;/span&gt; `&lt;span class="n"&gt;users&lt;/span&gt;`&lt;span class="p"&gt;.&lt;/span&gt;`&lt;span class="n"&gt;id&lt;/span&gt;` &lt;span class="p"&gt;=&lt;/span&gt; 1 &lt;span class="n"&gt;LIMIT&lt;/span&gt; 1
&lt;span class="n"&gt;Query&lt;/span&gt; &lt;span class="n"&gt;Trail&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;initializers&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;warden&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;11&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;in&lt;/span&gt; `&lt;span class="n"&gt;block&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;required&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;             config/initializers/warden.rb:15:in `block in &amp;lt;top (required)&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;Doc&lt;/span&gt; &lt;span class="n"&gt;Load&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;18&lt;span class="p"&gt;.&lt;/span&gt;2&lt;span class="n"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="n"&gt;SELECT&lt;/span&gt; `&lt;span class="n"&gt;docs&lt;/span&gt;`&lt;span class="o"&gt;.*&lt;/span&gt; &lt;span class="n"&gt;FROM&lt;/span&gt; `&lt;span class="n"&gt;docs&lt;/span&gt;`  &lt;span class="n"&gt;WHERE&lt;/span&gt; `&lt;span class="n"&gt;docs&lt;/span&gt;`&lt;span class="p"&gt;.&lt;/span&gt;`&lt;span class="n"&gt;approved&lt;/span&gt;` &lt;span class="p"&gt;=&lt;/span&gt; 1
&lt;span class="n"&gt;Query&lt;/span&gt; &lt;span class="n"&gt;Trail&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;_docs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;erb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;2
             &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;helpers&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;docs_helper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;3&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;in&lt;/span&gt; `&lt;span class="n"&gt;render_main_block&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;
             &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;erb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;13
             &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;erb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;9
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Rails autoloading</title>
    <link rel="alternate" href="/2013/11/13/rails-autoloading.html"/>
    <id>/2013/11/13/rails-autoloading.html</id>
    <published>2013-11-12T20:00:00Z</published>
    <updated>2013-11-12T20:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;There is much to be said about Rails autoloading and particularly about
&lt;code&gt;ActiveSupport::Dependencies&lt;/code&gt; (&lt;code&gt;AS::D&lt;/code&gt; for short). What does it do? As the title
says it loads constants automatically and reloads your code catching changes on
every request. Ok, why do we need it? Because it&amp;#39;s convenient! We don&amp;#39;t have to&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;There is much to be said about Rails autoloading and particularly about
&lt;code&gt;ActiveSupport::Dependencies&lt;/code&gt; (&lt;code&gt;AS::D&lt;/code&gt; for short). What does it do? As the title
says it loads constants automatically and reloads your code catching changes on
every request. Ok, why do we need it? Because it&amp;#39;s convenient! We don&amp;#39;t have to
write &lt;code&gt;require&lt;/code&gt; in every single file and watch which constants we need and when.
Rails loads constants and tracks what we need automatically. Also there&amp;#39;s no
need to reload your server every time you&amp;#39;ve made a change. There are some
pitfalls that you must know, but once you learn them everything will be ok.&lt;/p&gt;

&lt;h3&gt;How it works&lt;/h3&gt;

&lt;p&gt;Previously discussed method &lt;code&gt;self.const_missing(const_name)&lt;/code&gt; is the entry point
for &lt;code&gt;AS::D&lt;/code&gt;. Consider this example:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="c1"&gt;# /autoloadable/a.rb&lt;/span&gt;
  &lt;span class="c1"&gt;# module A&lt;/span&gt;
  &lt;span class="c1"&gt;# end&lt;/span&gt;

  &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;active_support/dependencies&amp;#39;&lt;/span&gt;
  &lt;span class="no"&gt;ActiveSupport&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Dependencies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;autoload_paths&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/autoloadable&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;

  &lt;span class="n"&gt;A&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;AS::D&lt;/code&gt; loads module &lt;code&gt;A&lt;/code&gt; automatically without any &lt;code&gt;require&lt;/code&gt;.&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="c1"&gt;# Meanwhile you can add sleep here and make changes in a.rb&lt;/span&gt;

  &lt;span class="no"&gt;ActiveSupport&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Dependencies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt; &lt;span class="c1"&gt;# Removes A from memory&lt;/span&gt;

  &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="c1"&gt;# Will load A again&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;I&amp;#39;ve just introduced the method Rails reloads your code with — &lt;code&gt;clear&lt;/code&gt;. Let&amp;#39;s
dig dipper and see how &lt;code&gt;AS::D&lt;/code&gt; actually works. There are two different constant
loading strategy: &lt;code&gt;:require&lt;/code&gt; and &lt;code&gt;:load&lt;/code&gt;(default). The first one means that all
the constants won&amp;#39;t be reloaded, as &lt;code&gt;require&lt;/code&gt; does eventually. The last one
means that all the constants will be removed from memory and loaded again on
demand. What does removing constant from memory mean? There&amp;#39;s a method called
&lt;code&gt;Module#remove_const(sym)&lt;/code&gt;:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;A&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="no"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:remove_const&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; uninitialized constant A (NameError)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;But what if we remove constant for existing instance of a class:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;value&lt;/span&gt;
      &lt;span class="s1"&gt;&amp;#39;value&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;
  &lt;span class="no"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:remove_const&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; A&lt;/span&gt;
  &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; &amp;#39;value&amp;#39;&lt;/span&gt;
  &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; uninitialized constant A (NameError)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;That&amp;#39;s interesting because constant name was removed from memory but its
instance still shows us its class and we can even call class methods on it. It
turns out that this method only removes constant name from &lt;code&gt;Object&lt;/code&gt; but a class
is an object and a constant is a variable referencing that object still exists
in the memory. Ok, move on.&lt;/p&gt;

&lt;p&gt;Calling &lt;code&gt;require &amp;#39;active_support/dependencies&amp;#39;&lt;/code&gt; injects a few modules into basic
Ruby classes via &lt;code&gt;AS::D.hook!&lt;/code&gt;.&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hook!&lt;/span&gt;
    &lt;span class="no"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;class_eval&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;Loadable&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="no"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;class_eval&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;ModuleConstMissing&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="no"&gt;Exception&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;class_eval&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;Blamable&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Methods injected into &lt;code&gt;Object&lt;/code&gt; overwrite methods like &lt;code&gt;load&lt;/code&gt; and &lt;code&gt;require&lt;/code&gt; in
order to monitor new constants, that said, it depends on loading strategy.
Another method you could already know is &lt;code&gt;require_dependency&lt;/code&gt; also injected into
&lt;code&gt;Object&lt;/code&gt;. Methods in &lt;code&gt;Module&lt;/code&gt; define an entry point &lt;code&gt;const_missing&lt;/code&gt;. I&amp;#39;m going
to show you how &lt;code&gt;AS::D&lt;/code&gt; works with this example:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="c1"&gt;# /autoloadable/a.rb&lt;/span&gt;
  &lt;span class="c1"&gt;# module A&lt;/span&gt;
  &lt;span class="c1"&gt;# end&lt;/span&gt;

  &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;active_support/dependencies&amp;#39;&lt;/span&gt;
  &lt;span class="no"&gt;ActiveSupport&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Dependencies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;autoload_paths&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/autoloadable&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;

  &lt;span class="n"&gt;A&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Declaring constant &lt;code&gt;A&lt;/code&gt; triggers &lt;code&gt;Module#const_missing&lt;/code&gt;, that was overwritten
by &lt;code&gt;AS::D&lt;/code&gt; and &lt;code&gt;Dependencies.load_missing_constant(from_mod, const_name)&lt;/code&gt; is
invoked. The first argument is &lt;code&gt;Object&lt;/code&gt; because &lt;code&gt;A == Object::A&lt;/code&gt; the second is
&lt;code&gt;:A&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;load_missing_constant&lt;/code&gt; tries to find the path for this constant which by
convention lies somewhere in one of the &lt;code&gt;autoload_paths&lt;/code&gt; by means of
&lt;code&gt;search_for_file(&amp;#39;a&amp;#39;)&lt;/code&gt;. It just returns the first file it can find with
&lt;code&gt;File.file?(File.join(autoload_path, &amp;#39;a.rb&amp;#39;))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Then &lt;code&gt;require_or_load&lt;/code&gt; method is invoked, whose behavior depends on loading
strategy. For &lt;code&gt;require&lt;/code&gt; it just requires the given file, for &lt;code&gt;load&lt;/code&gt;
&lt;code&gt;load_file(&amp;#39;/autoloadable/a.rb&amp;#39;, &amp;#39;A&amp;#39;)&lt;/code&gt; is invoked.&lt;/li&gt;
&lt;li&gt;Then it looks for new constants in given namespaces with:
&lt;code&gt;new_constants_in(*parent_paths) { Kernel.load(path) }&lt;/code&gt;
where &lt;code&gt;parent_paths&lt;/code&gt; is &lt;code&gt;[Object]&lt;/code&gt;, because we try to resolve &lt;code&gt;Object::A&lt;/code&gt; and
&lt;code&gt;path&lt;/code&gt; is the path to file. How does it monitor it? It&amp;#39;s just the difference
between the array of constants before and after. &lt;code&gt;Object.local_constants&lt;/code&gt; gives
us all the constants inside &lt;code&gt;Object&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;When it&amp;#39;s done, all newly defined constants append to &lt;code&gt;autoloaded_constants&lt;/code&gt;.
That&amp;#39;s all, new constant was defined with &lt;code&gt;AS::D&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;AS::D.clear&lt;/code&gt; removes constants from memory and clears all the auto-loaded
constants inside &lt;code&gt;AS::D&lt;/code&gt;. Pay your attention to &lt;code&gt;require_dependency&lt;/code&gt;. This
method adds all newly defined constants to &lt;code&gt;autoloaded_constants&lt;/code&gt; so that they
will be reloaded unlike the &lt;code&gt;require&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;Another convention &lt;code&gt;AS::D&lt;/code&gt; uses is a path convention. This example
&lt;code&gt;&amp;#39;A::B&amp;#39;.underscore # =&amp;gt; &amp;#39;a/b&amp;#39;&lt;/code&gt; simply illustrates that &lt;code&gt;::&lt;/code&gt; is treated as a &lt;code&gt;/&lt;/code&gt;,
which gives us ability to use folders like module namespaces:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="c1"&gt;# /autoloadable/a.rb&lt;/span&gt;
  &lt;span class="c1"&gt;# module A&lt;/span&gt;
  &lt;span class="c1"&gt;# end&lt;/span&gt;

  &lt;span class="c1"&gt;# /autoloadable/a/b.rb&lt;/span&gt;
  &lt;span class="c1"&gt;# module A&lt;/span&gt;
  &lt;span class="c1"&gt;#   module B&lt;/span&gt;
  &lt;span class="c1"&gt;#     C = &amp;#39;c&amp;#39;&lt;/span&gt;
  &lt;span class="c1"&gt;#   end&lt;/span&gt;
  &lt;span class="c1"&gt;# end&lt;/span&gt;

  &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;or even so:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="c1"&gt;# /autoloadable/a/b.rb&lt;/span&gt;
  &lt;span class="c1"&gt;# module A::B&lt;/span&gt;
  &lt;span class="c1"&gt;#   C = &amp;#39;c&amp;#39;&lt;/span&gt;
  &lt;span class="c1"&gt;# end&lt;/span&gt;

  &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Although we haven&amp;#39;t defined module &lt;code&gt;A&lt;/code&gt;, it has been created for us automatically
because of existing directory &lt;code&gt;a&lt;/code&gt;. It&amp;#39;s really convinient, because you are not
forced to create an empty module just for namespacing purpose.&lt;/p&gt;

&lt;h3&gt;Misconception&lt;/h3&gt;

&lt;p&gt;Since Ruby passes only one argument to &lt;code&gt;const_missing(const_name)&lt;/code&gt; we don&amp;#39;t have
an idea about the nesting, this example works as expected:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="c1"&gt;# /autoloadable/b.rb&lt;/span&gt;
  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;B&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# /autoloadable/a.rb&lt;/span&gt;
  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;A&lt;/span&gt;
    &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; B&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;but this shows wrong results:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="c1"&gt;# /autoloadable/a.rb&lt;/span&gt;
  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;A&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# /autoloadable/b.rb&lt;/span&gt;
  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;B&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; B&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Is that right? I don&amp;#39;t think so. If we had used pure Ruby it would have thrown
&lt;code&gt;NameError: uninitialized constant A::B&lt;/code&gt;, because we explicitly said we need &lt;code&gt;B&lt;/code&gt;
inside of &lt;code&gt;A&lt;/code&gt; but not the top-level &lt;code&gt;B&lt;/code&gt;. But this is Ruby&amp;#39;s fault it passes so
little info to &lt;code&gt;const_missing&lt;/code&gt; and &lt;code&gt;AS::D&lt;/code&gt; can do nothing with it.&lt;/p&gt;

&lt;p&gt;Another cool case:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="c1"&gt;# /autoloadable/a.rb&lt;/span&gt;
  &lt;span class="c1"&gt;# module A; end&lt;/span&gt;

  &lt;span class="c1"&gt;# /autoloadable/namespace/a/b.rb&lt;/span&gt;
  &lt;span class="c1"&gt;# module Namespace::A::B&lt;/span&gt;
  &lt;span class="c1"&gt;#  A&lt;/span&gt;
  &lt;span class="c1"&gt;# end&lt;/span&gt;

  &lt;span class="no"&gt;Namespace&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; What is A inside this namespace?&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;What would you expect from this example? I think in Ruby it&amp;#39;s obviously
top-level &lt;code&gt;A&lt;/code&gt;, but since &lt;code&gt;AS::D&lt;/code&gt; doesn&amp;#39;t know about nesting, would you expect it
to be either &lt;code&gt;Namespace::A&lt;/code&gt; or &lt;code&gt;A&lt;/code&gt;? Neither, because it&amp;#39;s &lt;code&gt;NameError&lt;/code&gt;, which is
much more confusing. It&amp;#39;s the last attempt of &lt;code&gt;AS::D&lt;/code&gt; to make an assumption that
since one of our parents has this constant
&lt;code&gt;Namespace.const_defined?(:A, false) # =&amp;gt; true&lt;/code&gt; then we&amp;#39;re definitely looking
for this constant in a short form &lt;code&gt;from_mod::const_name&lt;/code&gt;, otherwise Ruby would
return it without calling &lt;code&gt;const_missing&lt;/code&gt; and we don&amp;#39;t have to search it upwards
in &lt;code&gt;from_mod&lt;/code&gt;. Why don&amp;#39;t we have to search it right at the top-level? May be
because of this:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="c1"&gt;# c.rb&lt;/span&gt;
  &lt;span class="c1"&gt;# C = &amp;#39;c&amp;#39;&lt;/span&gt;

  &lt;span class="c1"&gt;# a/c.rb&lt;/span&gt;
  &lt;span class="c1"&gt;# module A&lt;/span&gt;
  &lt;span class="c1"&gt;#   C = &amp;#39;ac&amp;#39;&lt;/span&gt;
  &lt;span class="c1"&gt;# end&lt;/span&gt;

  &lt;span class="c1"&gt;# a/b.rb&lt;/span&gt;
  &lt;span class="c1"&gt;# module A::B&lt;/span&gt;
  &lt;span class="c1"&gt;#   C&lt;/span&gt;
  &lt;span class="c1"&gt;# end&lt;/span&gt;

  &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; &amp;#39;ac&amp;#39;&lt;/span&gt;
  &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; uninitialized constant A::B::C&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Calling it twice gives us an error, because of the same case we&amp;#39;ve considered
above. The first time &lt;code&gt;AS::D&lt;/code&gt; resolves &lt;code&gt;C&lt;/code&gt; through as usual, but the second time
it starts checking enclosing modules and since &lt;code&gt;A&lt;/code&gt; contains &lt;code&gt;C&lt;/code&gt; then Ruby must
have resolved it or otherwise it&amp;#39;s the short form and an error is thrown.
Imagine we&amp;#39;ve fixed it and instead of error we start loading top level constant.
Is it any better? Now we have two different constants calling it twice in a row,
which is still sad. That&amp;#39;s why I&amp;#39;d prefer an error.&lt;/p&gt;

&lt;h3&gt;Thread safety&lt;/h3&gt;

&lt;p&gt;Let&amp;#39;s write our own simplified autoloading:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="c1"&gt;# autoloadable/a.rb&lt;/span&gt;
  &lt;span class="c1"&gt;# module A&lt;/span&gt;
  &lt;span class="c1"&gt;#   sleep 5&lt;/span&gt;
  &lt;span class="c1"&gt;#   def self.hello&lt;/span&gt;
  &lt;span class="c1"&gt;#     &amp;#39;hello&amp;#39;&lt;/span&gt;
  &lt;span class="c1"&gt;#   end&lt;/span&gt;
  &lt;span class="c1"&gt;# end&lt;/span&gt;

  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Module&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;const_missing&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;./autoloadable/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;downcase&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.rb&amp;quot;&lt;/span&gt;
      &lt;span class="no"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;const_get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;The result is &lt;code&gt;undefined method &amp;#39;hello&amp;#39; for A:Module (NoMethodError)&lt;/code&gt;. Why?
Because second thread takes over when the first is awaiting sleeping. At that
moment module &lt;code&gt;A&lt;/code&gt; is already defined but method &lt;code&gt;hello&lt;/code&gt; isn&amp;#39;t defined yet. It
turns out that &lt;code&gt;AS::D&lt;/code&gt; will never be thread safe until &lt;code&gt;const_missing&lt;/code&gt; isn&amp;#39;t
thread safe. That&amp;#39;s the reason why your production environment loads all the
constants on initialization step. In fact, you can see different errors even
with MRI, because it switches threads when waits for input-ouput or network. For
instance, circular dependency arises, when the first thread waits for
input-ouput and another thread starts resolving the same constant, which is
already in the list of loaded.&lt;/p&gt;

&lt;h3&gt;Known errors&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Toplevel constant B referenced by A::B&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Have you ever seen the &amp;#39;Toplevel constant B referenced by A::B&amp;#39;? It&amp;#39;s easy to
reproduce even without &lt;code&gt;AS::D&lt;/code&gt;:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;B&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Since &lt;code&gt;A.ancestors&lt;/code&gt; is &lt;code&gt;[A, Object, Kernel, BasicObject]&lt;/code&gt; and contains class
&lt;code&gt;Object&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; are already defined as top level constants, Ruby shows us a
warning that constant we&amp;#39;re trying to resolve inside &lt;code&gt;A&lt;/code&gt; references top level
constant. Notice that for modules the situation is different:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;B&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;A&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;It gives us just &amp;#39;uninitialized constant A::B (NameError)&amp;#39; because the ancestors
chain doesn&amp;#39;t contain &lt;code&gt;Object&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Circular dependency detected while autoloading constant&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is yet another &lt;code&gt;AS::D&lt;/code&gt; error that you could see:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="c1"&gt;# /autoloadable/a.rb&lt;/span&gt;
  &lt;span class="c1"&gt;# B&lt;/span&gt;
  &lt;span class="c1"&gt;# module A&lt;/span&gt;
  &lt;span class="c1"&gt;# end&lt;/span&gt;

  &lt;span class="c1"&gt;# /autoloadable/b.rb&lt;/span&gt;
  &lt;span class="c1"&gt;# A&lt;/span&gt;
  &lt;span class="c1"&gt;# module B&lt;/span&gt;
  &lt;span class="c1"&gt;# end&lt;/span&gt;

  &lt;span class="n"&gt;A&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;If we try to access constant &lt;code&gt;A&lt;/code&gt; we&amp;#39;ll see this error. &lt;code&gt;AS::D&lt;/code&gt; makes an
assumption that this constant is defined in file &lt;code&gt;a.rb&lt;/code&gt;. When it loads this file
it finds another undefined constant &lt;code&gt;B&lt;/code&gt; and this time faces still undefined &lt;code&gt;A&lt;/code&gt;
while loading file &lt;code&gt;b.rb&lt;/code&gt;. This generates infinite recursion and to prevent it
an error must be raised. This error as and many others also appears in
multi-threaded environment.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A copy of &lt;code&gt;A&lt;/code&gt; has been removed from the module tree but is still active!&lt;/li&gt;
&lt;/ul&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="c1"&gt;# /autoloadable/money.rb&lt;/span&gt;
  &lt;span class="c1"&gt;# class Money&lt;/span&gt;
  &lt;span class="c1"&gt;# end&lt;/span&gt;

  &lt;span class="c1"&gt;# /autoloadable/customer.rb&lt;/span&gt;
  &lt;span class="c1"&gt;# class Customer&lt;/span&gt;
  &lt;span class="c1"&gt;#   def money&lt;/span&gt;
  &lt;span class="c1"&gt;#     Money.new&lt;/span&gt;
  &lt;span class="c1"&gt;#   end&lt;/span&gt;
  &lt;span class="c1"&gt;# end&lt;/span&gt;

  &lt;span class="n"&gt;customer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Customer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;

  &lt;span class="no"&gt;ActiveSupport&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Dependencies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;

  &lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;money&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;It happens because class for &lt;code&gt;Customer&lt;/code&gt; was autoloaded, but class for &lt;code&gt;Money&lt;/code&gt;
wasn&amp;#39;t because we haven&amp;#39;t invoked &lt;code&gt;Money.new&lt;/code&gt; before &lt;code&gt;AS::D.clear&lt;/code&gt;. Then
&lt;code&gt;Customer&lt;/code&gt; was removed as a reference, but instance of this class is still in
memory, and then we&amp;#39;re trying to resolve constant name &lt;code&gt;Money&lt;/code&gt;, but for
&lt;code&gt;customer.class::Money&lt;/code&gt; which is different from newly loaded &lt;code&gt;Customer&lt;/code&gt;. Please
note that saving the whole instance somewhere between sessions increases chances
you&amp;#39;ll see this error.&lt;/p&gt;

&lt;h3&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;You don&amp;#39;t have to care about all this stuff if you have flat hierarchy. It means
when you don&amp;#39;t use namespaces and all the files have different names, but it&amp;#39;s
hard if you have a lot of classes/modules. So you must have clear understanding
of this if you don&amp;#39;t want to be in trouble:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Don&amp;#39;t use the same name for top-level and namespaced constants.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be careful when you use short form declaration unless you know what you do.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be careful if you use short form declaration and it contains the name of the
constant you try to resolve, use full path instead.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Carefully work with constants in initializers, you may declare new constant
instead of loading original.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Try to run you application with eager loading or in production mode since it
may load your code in another order.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Links and used sources:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.plataformatec.com.br/2012/08/eager-loading-for-greater-good/"&gt;Eager loading&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://urbanautomaton.com/blog/2013/08/27/rails-autoloading-hell/"&gt;Rails autoloading&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tenderlovemaking.com/2012/06/18/removing-config-threadsafe.html"&gt;Removing config.threadsafe!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Ruby loading and requiring files, constant name resolution</title>
    <link rel="alternate" href="/2013/11/05/ruby-loading-and-requiring-files-constant-name-resolution.html"/>
    <id>/2013/11/05/ruby-loading-and-requiring-files-constant-name-resolution.html</id>
    <published>2013-11-04T20:00:00Z</published>
    <updated>2013-11-04T20:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;This article has started as my own research on a slightly different theme —
&lt;a href="/2013/11/13/rails-autoloading.html"&gt;Rails autoloading&lt;/a&gt;, but I couldn&amp;#39;t describe
it without saying a single word about Ruby itself. In this topic we&amp;#39;ll talk
about how Ruby loads and requires modules, constant name resolution and then&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;This article has started as my own research on a slightly different theme —
&lt;a href="/2013/11/13/rails-autoloading.html"&gt;Rails autoloading&lt;/a&gt;, but I couldn&amp;#39;t describe
it without saying a single word about Ruby itself. In this topic we&amp;#39;ll talk
about how Ruby loads and requires modules, constant name resolution and then
we&amp;#39;ll switch to &lt;a href="/2013/11/13/rails-autoloading.html"&gt;Rails autoloading&lt;/a&gt;. There&amp;#39;s
more or less info about all these topics on the internet, so that sometimes I&amp;#39;ll
be overlapping with it but sometimes not, I don&amp;#39;t claim it&amp;#39;s unique info but
anyway I have to sum it up in just one big article. So let&amp;#39;s get started with
Ruby.&lt;/p&gt;

&lt;h3&gt;Constant definition:&lt;/h3&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;A constant in Ruby is like a variable, except that its value is supposed to
remain constant for the duration of a program. The Ruby interpreter does not
actually enforce the constancy of constants, but it does issue a warning if a
program changes the value of a constant. Lexically, the names of constants look
like the names of local variables, except that they begin with a capital letter.
By convention, most constants are written in all uppercase with underscores to
separate words, LIKE_THIS. Ruby class and module names are also constants, but
they are conventionally written using initial capital letters and camel case,
LikeThis.

The Ruby Programming Language: David Flanagan; Yukihiro Matsumoto.
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;I think it&amp;#39;s clear and turns out that we&amp;#39;ll see a warning if we&amp;#39;ll try to change
a constant:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;
  &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;
  &lt;span class="c1"&gt;#./a.rb:2: warning: already initialized constant A&lt;/span&gt;
  &lt;span class="c1"&gt;#./a.rb:1: warning: previous definition of A was here&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;The same thing for classes:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;
  &lt;span class="c1"&gt;#./a.rb:2: warning: already initialized constant A&lt;/span&gt;
  &lt;span class="c1"&gt;#./a.rb:1: warning: previous definition of A was here&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Since the constant &lt;code&gt;A&lt;/code&gt; is just a reference for the class&amp;#39; object (remember class
is object in Ruby, right?) and we try to reassign it with new value then we see
this warning. Ok, now we know what the constant is, moving to files requiring.&lt;/p&gt;

&lt;h3&gt;Loading and requiring files&lt;/h3&gt;

&lt;p&gt;We cannot place all the code in just one single file, otherwise it would be too
long and complicated for reading. Usually we put a class per file and use a few
different methods in order to &amp;#39;concatenate&amp;#39; it. Here they are: &lt;code&gt;require&lt;/code&gt;,
&lt;code&gt;require_relative&lt;/code&gt;, &lt;code&gt;load&lt;/code&gt;, &lt;code&gt;autoload&lt;/code&gt;. Let&amp;#39;s start with the first one.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Kernel#require(name)&lt;/code&gt; loads the given name, returning &lt;code&gt;true&lt;/code&gt; if successful and
&lt;code&gt;false&lt;/code&gt; if the feature is already loaded. If the filename does not resolve to an
absolute path, it will be searched for in the directories listed in
&lt;code&gt;$LOAD_PATH ($:)&lt;/code&gt;. Any constants or globals within the loaded source file will
be available in the calling program&amp;#39;s global namespace. However, local variables
will not be propagated to the loading environment. With this method you can load
even native extension(&lt;code&gt;.so&lt;/code&gt;, &lt;code&gt;.dll&lt;/code&gt; or the others depending on current
platform). If you don&amp;#39;t specify the extension Ruby starts with &lt;code&gt;.rb&lt;/code&gt; and so on.
The absolute path of the loaded file is added to &lt;code&gt;$LOADED_FEATURES ($&amp;quot;)&lt;/code&gt;. A file
will not be loaded again if its path already appears in &lt;code&gt;$&amp;quot;&lt;/code&gt;.
&lt;code&gt;Kernel.require_relative(name)&lt;/code&gt; is almost the same as &lt;code&gt;require&lt;/code&gt; but it looks for
a file in the current directory or directories that is relative to current.&lt;/p&gt;

&lt;p&gt;Example with &lt;code&gt;require&lt;/code&gt;:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="c1"&gt;# a.rb&lt;/span&gt;
  &lt;span class="c1"&gt;# module A&lt;/span&gt;
  &lt;span class="c1"&gt;#   C = &amp;#39;constant&amp;#39;&lt;/span&gt;
  &lt;span class="c1"&gt;# end&lt;/span&gt;

  &lt;span class="n"&gt;before&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vg"&gt;$&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dup&lt;/span&gt;
  &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;
  &lt;span class="vg"&gt;$&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;before&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; [&amp;#39;/Users/route/Projects/dependencies/a.rb&amp;#39;]&lt;/span&gt;

  &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; &amp;#39;constant&amp;#39;&lt;/span&gt;
  &lt;span class="nb"&gt;sleep&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
  &lt;span class="c1"&gt;# Meanwhile changing constant value to &amp;#39;changed&amp;#39;&lt;/span&gt;

  &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;

  &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; &amp;#39;constant&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Kernel#load(filename, wrap=false)&lt;/code&gt; loads and executes the Ruby program in the
filename. If the filename does not resolve to an absolute path, the file is
searched for in &lt;code&gt;$:&lt;/code&gt;. If the optional wrap parameter is true, the loaded script
will be executed under an anonymous module, protecting the calling program&amp;#39;s
global namespace. It also can load the content of file many times because it
doesn&amp;#39;t rely on &lt;code&gt;$LOADED_FEATURES&lt;/code&gt;. Notice that &lt;code&gt;load&lt;/code&gt; needs a filename
extension.&lt;/p&gt;

&lt;p&gt;Example with &lt;code&gt;load&lt;/code&gt;:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="c1"&gt;# a.rb&lt;/span&gt;
  &lt;span class="c1"&gt;# module A&lt;/span&gt;
  &lt;span class="c1"&gt;#   C = &amp;#39;constant&amp;#39;&lt;/span&gt;
  &lt;span class="c1"&gt;# end&lt;/span&gt;

  &lt;span class="n"&gt;before&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vg"&gt;$&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dup&lt;/span&gt;
  &lt;span class="nb"&gt;load&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;./a.rb&amp;#39;&lt;/span&gt;
  &lt;span class="vg"&gt;$&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;before&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; []&lt;/span&gt;

  &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; &amp;#39;constant&amp;#39;&lt;/span&gt;
  &lt;span class="nb"&gt;sleep&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
  &lt;span class="c1"&gt;# Meanwhile changing constant value to &amp;#39;changed&amp;#39;&lt;/span&gt;

  &lt;span class="nb"&gt;load&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;./a.rb&amp;#39;&lt;/span&gt;

  &lt;span class="c1"&gt;# ./a.rb:2: warning: already initialized constant A::C&lt;/span&gt;
  &lt;span class="c1"&gt;# ./a.rb:2: warning: previous definition of C was here&lt;/span&gt;
  &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; &amp;#39;changed&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;With warnings but the code was reloaded and we can even see the changes we&amp;#39;ve
made. Let&amp;#39;s add optional parameter &lt;code&gt;wrap&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;Example with &lt;code&gt;load&lt;/code&gt; and wrap:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="c1"&gt;# a.rb&lt;/span&gt;
  &lt;span class="c1"&gt;# module A&lt;/span&gt;
  &lt;span class="c1"&gt;#   C = &amp;#39;constant&amp;#39;&lt;/span&gt;
  &lt;span class="c1"&gt;# end&lt;/span&gt;
  &lt;span class="c1"&gt;#&lt;/span&gt;
  &lt;span class="c1"&gt;# $A = A&lt;/span&gt;

  &lt;span class="nb"&gt;load&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;./a.rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;

  &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; uninitialized constant A (NameError)&lt;/span&gt;
  &lt;span class="vg"&gt;$A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; &amp;#39;constant&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;You see that Ruby hasn&amp;#39;t polluted global namespace and wrapped all the constants
from the file to an anonymous module, but global variables still could be
retrieved.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Kernel#autoload(module, filename)&lt;/code&gt; registers filename to be loaded (using
&lt;code&gt;Kernel::require&lt;/code&gt;) the first time that module (&lt;code&gt;String&lt;/code&gt; or a &lt;code&gt;Symbol&lt;/code&gt;) is
accessed.&lt;/p&gt;

&lt;p&gt;Example 1 with &lt;code&gt;autoload&lt;/code&gt;:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="c1"&gt;# a.rb&lt;/span&gt;
  &lt;span class="c1"&gt;# module A&lt;/span&gt;
  &lt;span class="c1"&gt;#   p &amp;#39;loading&amp;#39;&lt;/span&gt;
  &lt;span class="c1"&gt;# end&lt;/span&gt;

  &lt;span class="nb"&gt;autoload&lt;/span&gt; &lt;span class="ss"&gt;:A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;It won&amp;#39;t produce anything useful, because we&amp;#39;ve just declared that constant &lt;code&gt;A&lt;/code&gt;
can be found in a file but we&amp;#39;ve never used it.&lt;/p&gt;

&lt;p&gt;Example 2 with &lt;code&gt;autoload&lt;/code&gt;:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="c1"&gt;# a.rb&lt;/span&gt;
  &lt;span class="c1"&gt;# module A&lt;/span&gt;
  &lt;span class="c1"&gt;#   p &amp;#39;loading&amp;#39;&lt;/span&gt;
  &lt;span class="c1"&gt;# end&lt;/span&gt;

  &lt;span class="nb"&gt;autoload&lt;/span&gt; &lt;span class="ss"&gt;:A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;
  &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; Gives output &amp;#39;loading&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;In other words &lt;code&gt;autoload&lt;/code&gt; makes us to load code lazily on demand decreasing time
during the boot. There were some problems with thread safety and &lt;code&gt;autoload&lt;/code&gt;,
also there was a rumor that it would be deprecated, but I hadn&amp;#39;t found any info
what the Ruby core team came up with. But the bug was fixed and I just can say
it works properly even with threads for now:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="c1"&gt;# a.rb&lt;/span&gt;
  &lt;span class="c1"&gt;# module A&lt;/span&gt;
  &lt;span class="c1"&gt;#   sleep 5&lt;/span&gt;
  &lt;span class="c1"&gt;#   def self.hello&lt;/span&gt;
  &lt;span class="c1"&gt;#     &amp;#39;hello&amp;#39;&lt;/span&gt;
  &lt;span class="c1"&gt;#   end&lt;/span&gt;
  &lt;span class="c1"&gt;# end&lt;/span&gt;

  &lt;span class="nb"&gt;autoload&lt;/span&gt; &lt;span class="ss"&gt;:A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;./a&amp;#39;&lt;/span&gt;

  &lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;I was expecting that second thread would throw an error that method &lt;code&gt;hello&lt;/code&gt; is
undefined because module &lt;code&gt;A&lt;/code&gt; had been loaded by first thread but because of
sleep threads were switched, but it worked.&lt;/p&gt;

&lt;h3&gt;Constant resolution&lt;/h3&gt;

&lt;p&gt;I find this example very comprehensive and I won&amp;#39;t describe it much because the
code tells about itself:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Kernel&lt;/span&gt;
    &lt;span class="c1"&gt;# Constants defined in Kernel&lt;/span&gt;
    &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;D&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;E&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;defined in kernel&amp;#39;&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# Top-level or &amp;#39;global&amp;#39; constants defined in Object&lt;/span&gt;
  &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;D&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;E&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;defined at top-level&amp;#39;&lt;/span&gt;

  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Super&lt;/span&gt;
    &lt;span class="c1"&gt;# Constants defined in a superclass&lt;/span&gt;
    &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;D&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;defined in superclass&amp;#39;&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Included&lt;/span&gt;
    &lt;span class="c1"&gt;# Constants defined in an included module&lt;/span&gt;
    &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;defined in included module&amp;#39;&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Enclosing&lt;/span&gt;
    &lt;span class="c1"&gt;# Constants defined in an enclosing module&lt;/span&gt;
    &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;defined in enclosing module&amp;#39;&lt;/span&gt;

    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Local&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;Super&lt;/span&gt;
      &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;Included&lt;/span&gt;

      &lt;span class="c1"&gt;# Locally defined constant&lt;/span&gt;
      &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;defined locally&amp;#39;&lt;/span&gt;

      &lt;span class="c1"&gt;# The list of modules searched, in the order searched&lt;/span&gt;
      &lt;span class="c1"&gt;# [Enclosing::Local, Enclosing, Included, Super, Object, Kernel, BasicObject]&lt;/span&gt;
      &lt;span class="c1"&gt;# (Module.nesting + self.ancestors + Object.ancestors).uniq&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;  &lt;span class="c1"&gt;# Prints &amp;quot;defined locally&amp;quot;&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;  &lt;span class="c1"&gt;# Prints &amp;quot;defined in enclosing module&amp;quot;&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;  &lt;span class="c1"&gt;# Prints &amp;quot;defined in included module&amp;quot;&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;D&lt;/span&gt;  &lt;span class="c1"&gt;# Prints &amp;quot;defined in superclass&amp;quot;&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;E&lt;/span&gt;  &lt;span class="c1"&gt;# Prints &amp;quot;defined at top-level&amp;quot;&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;F&lt;/span&gt;  &lt;span class="c1"&gt;# Prints &amp;quot;defined in kernel&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;So the path Ruby follows in order to resolve constant name starts with
&lt;code&gt;Module.nesting&lt;/code&gt; which of course starts with itself and then all enclosing
constants respectively. If the constant cannot be found there, then ancestors
chain is applied.&lt;/p&gt;

&lt;h3&gt;Known pitfalls:&lt;/h3&gt;

&lt;p&gt;1) Nesting:&lt;/p&gt;

&lt;p&gt;We can define new class/module using two different ways:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;A&lt;/span&gt;
    &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;B&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;A&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;A::B&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Pay attention that &lt;code&gt;Module.nesting&lt;/code&gt; for these two forms is different and turns
out that your constant name resolution will be different too:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;A&lt;/span&gt;
    &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;A&lt;/span&gt;
    &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;B&lt;/span&gt;
      &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; &amp;#39;c&amp;#39;&lt;/span&gt;
      &lt;span class="no"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nesting&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; [A::B, A]&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;A::B&lt;/span&gt;
    &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; NameError: uninitialized constant A::B::C&lt;/span&gt;
    &lt;span class="no"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nesting&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; [A::B]&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;2) Inheritance:&lt;/p&gt;

&lt;p&gt;Remember that constants use the currently opened class or module, as determined
by &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;module&lt;/code&gt; statements.&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Parent&lt;/span&gt;
    &lt;span class="no"&gt;CONST&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;parent&amp;#39;&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;const&lt;/span&gt;
      &lt;span class="no"&gt;CONST&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Child&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;Parent&lt;/span&gt;
    &lt;span class="no"&gt;CONST&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;child&amp;#39;&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="no"&gt;Child&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;const&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; parent&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;In this example method is invoked on parent class, so its class is the innermost
one. To change things you could use &lt;code&gt;self::CONST&lt;/code&gt; this way you&amp;#39;re explicitly
saying find my constant in &lt;code&gt;self&lt;/code&gt; where &lt;code&gt;self&lt;/code&gt; is &lt;code&gt;Child&lt;/code&gt; if we call
&lt;code&gt;Child.const&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;3) Object::&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Module.nesting == []&lt;/code&gt; at the top level, and so constant lookup starts at the
currently opened class and its ancestors which is &lt;code&gt;Object&lt;/code&gt;:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Object&lt;/span&gt;
    &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;C&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="no"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;C&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="no"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;This in turn explains why top-level constants are available throughout your
program. Almost all classes in Ruby inherit from &lt;code&gt;Object&lt;/code&gt;, so &lt;code&gt;Object&lt;/code&gt; is almost
always included in the list of ancestors of the currently open class, and thus
its constants are almost always available. That said, if you&amp;#39;ve ever used a
&lt;code&gt;BasicObject&lt;/code&gt;, and noticed that top-level constants are missing, you now know
why. Because &lt;code&gt;BasicObject&lt;/code&gt; does not subclass &lt;code&gt;Object&lt;/code&gt;, all of the constants are
not in the lookup chain:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Foo&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;BasicObject&lt;/span&gt;
    &lt;span class="no"&gt;Kernel&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="c1"&gt;# NameError: uninitialized constant Foo::Kernel&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;For cases like this, and anywhere else you want to be explicit, Ruby allows you
to use &lt;code&gt;::Kernel&lt;/code&gt; to access &lt;code&gt;Object::Kernel&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;4) &lt;code&gt;class_eval&lt;/code&gt;, &lt;code&gt;module_eval&lt;/code&gt;, &lt;code&gt;instance_eval&lt;/code&gt;, &lt;code&gt;define_method&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;As mentioned above, constant lookup uses the currently opened class, as
determined by class and module statements. Importantly, if you pass a block into
&lt;code&gt;class_eval&lt;/code&gt;, &lt;code&gt;module_eval&lt;/code&gt; or &lt;code&gt;instance_eval&lt;/code&gt;, &lt;code&gt;define_method&lt;/code&gt;, this won&amp;#39;t
change constant lookup. It continues to use the constant lookup at the
point the block was defined:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;
    &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;B&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;C&lt;/span&gt;
    &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;B&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;class_eval&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Confusingly however, if you pass a &lt;code&gt;String&lt;/code&gt; to these methods, then the &lt;code&gt;String&lt;/code&gt;
is evaluated with &lt;code&gt;Module.nesting&lt;/code&gt; containing just the class/module itself (for
&lt;code&gt;class_eval&lt;/code&gt; or &lt;code&gt;module_eval&lt;/code&gt;) or just the singleton class of the object (for
&lt;code&gt;instance_eval&lt;/code&gt;).&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;A&lt;/span&gt;
    &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;B&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;C&lt;/span&gt;
    &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;B&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;module_eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;B&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;A&lt;/span&gt;
    &lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;B&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;C&lt;/span&gt;
    &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;B&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;module_eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; uninitialized constant A::B::X (NameError)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;5) Singleton class:&lt;/p&gt;

&lt;p&gt;If you&amp;#39;re in a singleton class of a class, you don&amp;#39;t get access to constants
defined in the class itself:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;
    &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;B&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;
    &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; uninitialized constant Class::B&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;This is because the ancestors of the singleton class of a class do not include
the class itself, they start at the &lt;code&gt;Class&lt;/code&gt; class.&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;
    &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;B&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;
    &lt;span class="nb"&gt;ancestors&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; [Class, Module, Object, Kernel, BasicObject]&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Lastly, imagine we access a constant that isn&amp;#39;t defined at all then
&lt;code&gt;self.const_missing&lt;/code&gt; is invoked on the class that needs constant or if it wasn&amp;#39;t
defined on that class it&amp;#39;s invoked on its superclass — &lt;code&gt;Module&lt;/code&gt;
(&lt;code&gt;A.class.superclass # =&amp;gt; Module&lt;/code&gt;). It accepts just one single argument
&lt;code&gt;const_name&lt;/code&gt; which is the constant name we&amp;#39;re looking for. By default this
method simply throws an error &lt;code&gt;NameError: uninitialized constant #{const_name}&lt;/code&gt;.
That&amp;#39;s all for Ruby moving to the more interesting part —
&lt;a href="/2013/11/13/rails-autoloading.html"&gt;Rails autoloading&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Links and used sources:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ruby-doc.org"&gt;Ruby-doc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cirw.in/blog/constant-lookup"&gt;Constant lookup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://coderrr.wordpress.com/2008/03/11/constant-name-resolution-in-ruby/"&gt;Module.nesting and constant name resolution in Ruby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Ruby inherited method bug</title>
    <link rel="alternate" href="/2012/12/16/ruby-inherited-method-bug.html"/>
    <id>/2012/12/16/ruby-inherited-method-bug.html</id>
    <published>2012-12-15T20:00:00Z</published>
    <updated>2012-12-15T20:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;This post is about the bug I found when I was writing tests for &lt;code&gt;quiet_assets&lt;/code&gt;.
I won&amp;#39;t show you all those tests, just a small piece:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="no"&gt;Class&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;routes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;.&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;All of them were passed on my laptop, but Travis-CI showed me the odd message&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;This post is about the bug I found when I was writing tests for &lt;code&gt;quiet_assets&lt;/code&gt;.
I won&amp;#39;t show you all those tests, just a small piece:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="no"&gt;Class&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;routes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;.&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;All of them were passed on my laptop, but Travis-CI showed me the odd message
for Ruby 1.8:
&lt;code&gt;undefined local variable or method &amp;#39;routes&amp;#39; for #&amp;lt;Class:0xb6b9a92c&amp;gt;&lt;/code&gt;.
It says that there&amp;#39;s no such method &lt;code&gt;routes&lt;/code&gt; inside dynamically generated class,
but it works for Ruby 1.9. What&amp;#39;s wrong with it? Let&amp;#39;s take a look at
Rails core. In our example we define dynamic class whose parent is
&lt;code&gt;Rails::Application&lt;/code&gt; that inherited from class &lt;code&gt;Rails::Engine&lt;/code&gt; that inherited
from &lt;code&gt;Rails::Railtie&lt;/code&gt;. You can find &lt;code&gt;routes&lt;/code&gt; definition at line 488 of
&lt;code&gt;Rails::Engine&lt;/code&gt;. I consider only 3-2-stable branch in my post. It&amp;#39;s defined as
an instance method. How can it be possible to use it on the class level?
If you take a look at the chain of &lt;code&gt;self.inherited&lt;/code&gt; callbacks in all those
classes you&amp;#39;ll see that &lt;code&gt;Rails::Railtie&lt;/code&gt; has module inclusion:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;inherited&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;.&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:include&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;Railtie&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Configurable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Railtie::Configurable&lt;/code&gt; has &lt;code&gt;method_missing&lt;/code&gt; which does exactly our case -
proxying our calls to instance. You see that all logic rely on &lt;code&gt;self.inhereted&lt;/code&gt;
callback. Let&amp;#39;s check it:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Parent&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;inherited&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Inside inherited&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Child&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;Parent&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;We are inside class definition&amp;#39;&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Class&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;Parent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;We are inside class definition&amp;#39;&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;If you run this code you&amp;#39;ll see that for &lt;code&gt;Class.new&lt;/code&gt; we&amp;#39;ll get this:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;inside&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;definition&lt;/span&gt;
  &lt;span class="n"&gt;Inside&lt;/span&gt; &lt;span class="n"&gt;inherited&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Ruby 1.8 cannot find &lt;code&gt;routes&lt;/code&gt;, even &lt;code&gt;method_missing&lt;/code&gt; just because
&lt;code&gt;self.inherited&lt;/code&gt; chain couldn&amp;#39;t be invoked inside our block, it would be
invoked after class definition. Be careful!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>See the difference</title>
    <link rel="alternate" href="/2012/08/28/see-the-difference.html"/>
    <id>/2012/08/28/see-the-difference.html</id>
    <published>2012-08-27T20:00:00Z</published>
    <updated>2012-08-27T20:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;Yesterday I faced the strange behaviour of the array wrapping in context
of Arel. I tried to wrap something like this &lt;code&gt;User.arel_table[:id]&lt;/code&gt; but
&lt;code&gt;Array(User.arel_table[:id])&lt;/code&gt; and &lt;code&gt;Array.wrap(User.arel_table[:id])&lt;/code&gt;
gave me different results. Now I&amp;#39;ll tell you why you have to know about&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;Yesterday I faced the strange behaviour of the array wrapping in context
of Arel. I tried to wrap something like this &lt;code&gt;User.arel_table[:id]&lt;/code&gt; but
&lt;code&gt;Array(User.arel_table[:id])&lt;/code&gt; and &lt;code&gt;Array.wrap(User.arel_table[:id])&lt;/code&gt;
gave me different results. Now I&amp;#39;ll tell you why you have to know about
some differences in array wrapping and why Rails contains their own wrap
realization.&lt;/p&gt;

&lt;p&gt;You probably know about
&lt;a href="https://github.com/rails/rails/blob/master/activesupport/lib/active_support/core_ext/array/wrap.rb#L36"&gt;Array.wrap&lt;/a&gt;
in Rails but if you don&amp;#39;t here you are:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nil?&lt;/span&gt;
      &lt;span class="o"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;elsif&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;respond_to?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:to_ary&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_ary&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;And you probably know about
&lt;a href="http://rxr.whitequark.org/mri/source/object.c#2624"&gt;Kernel#Array&lt;/a&gt;:&lt;/p&gt;
&lt;div class='codeblock'&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="n"&gt;VALUE&lt;/span&gt;
  &lt;span class="nf"&gt;rb_Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;VALUE&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;VALUE&lt;/span&gt; &lt;span class="n"&gt;tmp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rb_check_array_type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NIL_P&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;tmp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rb_check_convert_type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T_ARRAY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Array&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;to_a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NIL_P&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;rb_ary_new3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;VALUE&lt;/span&gt;
  &lt;span class="nf"&gt;rb_f_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;VALUE&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;VALUE&lt;/span&gt; &lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;rb_Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Let&amp;#39;s talk about ruby realization first of all.
When you invoke &lt;code&gt;Array(object)&lt;/code&gt;, ruby will try to convert object into array
by means of &lt;code&gt;rb_check_array_type(val)&lt;/code&gt; call. At the first step this
function will try to invoke &lt;code&gt;to_ary&lt;/code&gt; and if it&amp;#39;s defined and result differ
from &lt;code&gt;nil&lt;/code&gt; and the same class as and &lt;code&gt;Array&lt;/code&gt; it&amp;#39;ll be returned.
The second step (Line 6) (if result of the first step was &lt;code&gt;nil&lt;/code&gt;)
is &lt;code&gt;to_a&lt;/code&gt;, here is the same thing as described above. The third and final
step (Line 8) (if steps above return &lt;code&gt;nil&lt;/code&gt;) is new array will be created
with object as its element.&lt;/p&gt;

&lt;p&gt;Now take a look at Rails realization. If object is &lt;code&gt;nil&lt;/code&gt; it returns empty
array. If object responds to &lt;code&gt;to_ary&lt;/code&gt; method it returns the result
or if the result is &lt;code&gt;nil&lt;/code&gt; just &lt;code&gt;[object]&lt;/code&gt;. And finally it returns 
&lt;code&gt;[object]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You see that Rails method doesn&amp;#39;t call &lt;code&gt;to_a&lt;/code&gt;.
And one thing I haven&amp;#39;t mentioned is raise. Yep. Ruby version will raise
exception if object that you return in &lt;code&gt;to_ary&lt;/code&gt; or &lt;code&gt;to_a&lt;/code&gt; methods isn&amp;#39;t
&lt;code&gt;Array&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now you and me know why &lt;code&gt;Array(object)&lt;/code&gt; returns me not what I wanted
because of overridden &lt;code&gt;to_a&lt;/code&gt; method in Arel.
And in my case I select Rails version of course.&lt;/p&gt;

&lt;p&gt;There are things I have never thought about and just used them.
They seemed to me very simple but in reality they are tiniest bits of a big
complicated mechanism. We use too many abstraction levels and work on the top
of it and rely on it. You should be waiting for troubles from everywhere.&lt;/p&gt;
</content>
  </entry>
</feed>
